//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RezaB.API.MobilExpress.MobilExpressServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MobilExpressServiceReference.FastCheckoutServiceSoap")]
    public interface FastCheckoutServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendOTPForCardSave", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCSendOTPForCardSaveResult SendOTPForCardSave(string MerchantKey, string APIpassword, string Phone, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendOTPForCardSave", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSendOTPForCardSaveResult> SendOTPForCardSaveAsync(string MerchantKey, string APIpassword, string Phone, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCreditCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveCreditCardResult SaveCreditCard(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string CustomerName, string CardNumber, string CardHolderName, int CardMonth, int CardYear, string ClientIP, string ClientUserAgent, string VerificationOTP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCreditCard", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveCreditCardResult> SaveCreditCardAsync(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string CustomerName, string CardNumber, string CardHolderName, int CardMonth, int CardYear, string ClientIP, string ClientUserAgent, string VerificationOTP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveCustomerResultCode SaveCustomer(string MerchantKey, string APIpassword, string Email, string CustomerID, string CustomerName, string Phone, string TCKNVKN, string Password, string CustomField1, string CustomField2, string CustomField3, bool Active, string ClientIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveCustomerResultCode> SaveCustomerAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string CustomerName, string Phone, string TCKNVKN, string Password, string CustomField1, string CustomField2, string CustomField3, bool Active, string ClientIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FindCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCFindCustomerResultCode FindCustomer(string MerchantKey, string APIpassword, string Email, string CustomerID, string ClientIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FindCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCFindCustomerResultCode> FindCustomerAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string ClientIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePOSInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCSavePOSInfoResult SavePOSInfo(
                    string MerchantKey, 
                    string APIpassword, 
                    string BankCode, 
                    int CurrencyCode, 
                    string MerchantID, 
                    string ClientID, 
                    string SubMerchantorMerchantGroup, 
                    string APIUserName, 
                    string APIUserPassword, 
                    string APICancelUserName, 
                    string APICancelUserPassword, 
                    string StoreKey, 
                    string ServiceAddress, 
                    string GatewayAddress3D, 
                    string ExtraInfo, 
                    bool IsDefault, 
                    bool IsActive, 
                    bool IsMOTO, 
                    string MerchantPosInfo, 
                    string Title, 
                    string CardPrograms, 
                    bool SupportAmex, 
                    bool DefaultAmexPOS, 
                    bool NonInstallmentPOS, 
                    bool ForeignPOS, 
                    bool ForeignAmexPOS, 
                    bool Always3D, 
                    bool Customer3DManualCard, 
                    bool Customer3DStoredCard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePOSInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSavePOSInfoResult> SavePOSInfoAsync(
                    string MerchantKey, 
                    string APIpassword, 
                    string BankCode, 
                    int CurrencyCode, 
                    string MerchantID, 
                    string ClientID, 
                    string SubMerchantorMerchantGroup, 
                    string APIUserName, 
                    string APIUserPassword, 
                    string APICancelUserName, 
                    string APICancelUserPassword, 
                    string StoreKey, 
                    string ServiceAddress, 
                    string GatewayAddress3D, 
                    string ExtraInfo, 
                    bool IsDefault, 
                    bool IsActive, 
                    bool IsMOTO, 
                    string MerchantPosInfo, 
                    string Title, 
                    string CardPrograms, 
                    bool SupportAmex, 
                    bool DefaultAmexPOS, 
                    bool NonInstallmentPOS, 
                    bool ForeignPOS, 
                    bool ForeignAmexPOS, 
                    bool Always3D, 
                    bool Customer3DManualCard, 
                    bool Customer3DStoredCard);
        
        // CODEGEN: Parameter 'POSID' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPOSInfoList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListResponse GetPOSInfoList(RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPOSInfoList", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListResponse> GetPOSInfoListAsync(RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PaymentPlanCardUpdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCUpdateCreditCardResult PaymentPlanCardUpdate(string MerchantKey, string APIpassword, string Email, string CustomerID, string oldCardToken, string newCardNumber, string newCardHolderName, int newCardMonth, int newCardYear, string ClientIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PaymentPlanCardUpdate", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCUpdateCreditCardResult> PaymentPlanCardUpdateAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string oldCardToken, string newCardNumber, string newCardHolderName, int newCardMonth, int newCardYear, string ClientIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCreditCardList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetCreditCardListResult GetCreditCardList(string MerchantKey, string APIpassword, string Email, string CustomerID, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCreditCardList", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetCreditCardListResult> GetCreditCardListAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankOfBINNumber", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetBankOfBINResult GetBankOfBINNumber(string MerchantKey, string APIpassword, string BIN, string ClientIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetBankOfBINNumber", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetBankOfBINResult> GetBankOfBINNumberAsync(string MerchantKey, string APIpassword, string BIN, string ClientIP);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendOTPForCardList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCSendOTPForCardListResult SendOTPForCardList(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendOTPForCardList", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSendOTPForCardListResult> SendOTPForCardListAsync(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyAndGetCardList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetCreditCardListResult VerifyAndGetCardList(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string VerificationOTP, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/VerifyAndGetCardList", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetCreditCardListResult> VerifyAndGetCardListAsync(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string VerificationOTP, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteCreditCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCDeleteCardResult DeleteCreditCard(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteCreditCard", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCDeleteCardResult> DeleteCreditCardAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteAllCardsOfCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCDeleteAllCardsResult DeleteAllCardsOfCustomer(string MerchantKey, string APIpassword, string Email, string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteAllCardsOfCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCDeleteAllCardsResult> DeleteAllCardsOfCustomerAsync(string MerchantKey, string APIpassword, string Email, string CustomerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoyaltyPointInquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCLoyaltyPointInquiryResult LoyaltyPointInquiry(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken, int POSID, string ExtParam, string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoyaltyPointInquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCLoyaltyPointInquiryResult> LoyaltyPointInquiryAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken, int POSID, string ExtParam, string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoyaltyPointInquiryWithCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCLoyaltyPointInquiryWithCardResult LoyaltyPointInquiryWithCard(string MerchantKey, string APIpassword, string CardNum, int LastYear, int LastMonth, int POSID, string CardHolder, string ExtParam, string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/LoyaltyPointInquiryWithCard", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCLoyaltyPointInquiryWithCardResult> LoyaltyPointInquiryWithCardAsync(string MerchantKey, string APIpassword, string CardNum, int LastYear, int LastMonth, int POSID, string CardHolder, string ExtParam, string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProcessPayment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentResult ProcessPayment(
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, 
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string Email, 
                    string CustomerID, 
                    string CardToken, 
                    int POSID, 
                    decimal TotalAmount, 
                    int InstallmentCount, 
                    bool UseLoyaltyPoints, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool Request3D, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtCampaignInfo, 
                    string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProcessPayment", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentResult> ProcessPaymentAsync(
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, 
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string Email, 
                    string CustomerID, 
                    string CardToken, 
                    int POSID, 
                    decimal TotalAmount, 
                    int InstallmentCount, 
                    bool UseLoyaltyPoints, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool Request3D, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtCampaignInfo, 
                    string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProcessPaymentWithCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentWithCardResult ProcessPaymentWithCard(
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, 
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string CardNum, 
                    int LastYear, 
                    int LastMonth, 
                    string CVV, 
                    int POSID, 
                    decimal TotalAmount, 
                    int InstallmentCount, 
                    bool UseLoyaltyPoints, 
                    bool Request3D, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtCampaignInfo, 
                    string CustomerID, 
                    string Email, 
                    string CustomerName, 
                    string CustomerPhone, 
                    string CardHolder, 
                    string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ProcessPaymentWithCard", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentWithCardResult> ProcessPaymentWithCardAsync(
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, 
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string CardNum, 
                    int LastYear, 
                    int LastMonth, 
                    string CVV, 
                    int POSID, 
                    decimal TotalAmount, 
                    int InstallmentCount, 
                    bool UseLoyaltyPoints, 
                    bool Request3D, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtCampaignInfo, 
                    string CustomerID, 
                    string Email, 
                    string CustomerName, 
                    string CustomerPhone, 
                    string CardHolder, 
                    string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PaymentInquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentInquiryResult PaymentInquiry(RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, string MerchantKey, string APIpassword, string TransactionId, int POSID, decimal TotalAmount, int InstallmentCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PaymentInquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentInquiryResult> PaymentInquiryAsync(RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, string MerchantKey, string APIpassword, string TransactionId, int POSID, decimal TotalAmount, int InstallmentCount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinishPaymentProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentResult FinishPaymentProcess(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, string OTP, string CVV, int POSID, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinishPaymentProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentResult> FinishPaymentProcessAsync(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, string OTP, string CVV, int POSID, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinishPaymentProcessWithCard", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentWithCardResult FinishPaymentProcessWithCard(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, string CardNum, int LastYear, int LastMonth, string CVV, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/FinishPaymentProcessWithCard", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentWithCardResult> FinishPaymentProcessWithCardAsync(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, string CardNum, int LastYear, int LastMonth, string CVV, string ClientIP, string ClientUserAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateNotification", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        bool ValidateNotification(string TransactionId, string MobilexpressTransId, string Result, int InstallmentCount, decimal TotalAmount, string Hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ValidateNotification", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> ValidateNotificationAsync(string TransactionId, string MobilexpressTransId, string Result, int InstallmentCount, decimal TotalAmount, string Hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartHostedPaymentProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCStartHostedPaymentProcessResult StartHostedPaymentProcess(
                    string MerchantKey, 
                    string APIpassword, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.PGProcessType ProcessType, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.PGViewType ViewType, 
                    int DesignType, 
                    string Email, 
                    string CustomerID, 
                    string Phone, 
                    bool UseOneClickPayment, 
                    bool CustomerIsLoggedIn, 
                    bool UseIVRForCardEntry, 
                    string TransactionId, 
                    decimal TotalAmount, 
                    string BasketContent, 
                    bool UseLoyaltyPoints, 
                    bool Use3DSecure, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool UseInstallment, 
                    bool UseCustomInstallments, 
                    string InstallmentRateTable, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtraParam, 
                    string CustomerName, 
                    string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartHostedPaymentProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCStartHostedPaymentProcessResult> StartHostedPaymentProcessAsync(
                    string MerchantKey, 
                    string APIpassword, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.PGProcessType ProcessType, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.PGViewType ViewType, 
                    int DesignType, 
                    string Email, 
                    string CustomerID, 
                    string Phone, 
                    bool UseOneClickPayment, 
                    bool CustomerIsLoggedIn, 
                    bool UseIVRForCardEntry, 
                    string TransactionId, 
                    decimal TotalAmount, 
                    string BasketContent, 
                    bool UseLoyaltyPoints, 
                    bool Use3DSecure, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool UseInstallment, 
                    bool UseCustomInstallments, 
                    string InstallmentRateTable, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtraParam, 
                    string CustomerName, 
                    string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateHostedPaymentProcess", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCUpdateHostedPaymentProcessResult UpdateHostedPaymentProcess(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, decimal TotalAmount, bool Use3DSecure, bool RequestOTP, bool RequestCVV, string BasketContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateHostedPaymentProcess", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCUpdateHostedPaymentProcessResult> UpdateHostedPaymentProcessAsync(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, decimal TotalAmount, bool Use3DSecure, bool RequestOTP, bool RequestCVV, string BasketContent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartHostedAccountManagement", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCStartHostedAccountManagementResult StartHostedAccountManagement(string MerchantKey, string APIpassword, RezaB.API.MobilExpress.MobilExpressServiceReference.PGViewType ViewType, int DesignType, string Email, string CustomerID, string Phone, bool CustomerIsLoggedIn, bool UseIVRForCardEntry, string ClientIP, string ClientUserAgent, string ExtraParam, string CustomerName, string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/StartHostedAccountManagement", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCStartHostedAccountManagementResult> StartHostedAccountManagementAsync(string MerchantKey, string APIpassword, RezaB.API.MobilExpress.MobilExpressServiceReference.PGViewType ViewType, int DesignType, string Email, string CustomerID, string Phone, bool CustomerIsLoggedIn, bool UseIVRForCardEntry, string ClientIP, string ClientUserAgent, string ExtraParam, string CustomerName, string POSConfiguration);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHostedPaymentProcessStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetHostedPaymentProcessStatusResult GetHostedPaymentProcessStatus(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetHostedPaymentProcessStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetHostedPaymentProcessStatusResult> GetHostedPaymentProcessStatusAsync(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePaymentPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCSavePaymentPlanResult SavePaymentPlan(string MerchantKey, string APIpassword, string Email, string CustomerID, string PaymentPlanId, string CardToken, RezaB.API.MobilExpress.MobilExpressServiceReference.FCRecurringType RecurringType, RezaB.API.MobilExpress.MobilExpressServiceReference.FCCurrency Currency, RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentPlanLine[] Lines, int TryDays, int POSID, string GroupCode, bool AutoPayment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SavePaymentPlan", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSavePaymentPlanResult> SavePaymentPlanAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string PaymentPlanId, string CardToken, RezaB.API.MobilExpress.MobilExpressServiceReference.FCRecurringType RecurringType, RezaB.API.MobilExpress.MobilExpressServiceReference.FCCurrency Currency, RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentPlanLine[] Lines, int TryDays, int POSID, string GroupCode, bool AutoPayment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPaymentPlanList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentPlanList GetPaymentPlanList(string MerchantKey, string APIpassword, string Email, string CustomerID, string PaymentPlanId, bool OnlyNotProcessed, bool OnlyProcessed, int StartYear, int StartMonth, int EndYear, int EndMonth, int Page, string SortField, bool SortDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPaymentPlanList", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentPlanList> GetPaymentPlanListAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string PaymentPlanId, bool OnlyNotProcessed, bool OnlyProcessed, int StartYear, int StartMonth, int EndYear, int EndMonth, int Page, string SortField, bool SortDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveBlackListItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveBlackListItemResult SaveBlackListItem(string MerchantKey, string APIpassword, string CreditCardNumber, string Email, string Phone, string TCKN, string ClientIP, int ReasonCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveBlackListItem", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveBlackListItemResult> SaveBlackListItemAsync(string MerchantKey, string APIpassword, string CreditCardNumber, string Email, string Phone, string TCKN, string ClientIP, int ReasonCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePaymentLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreatePaymentLinkResult CreatePaymentLink(
                    string MerchantKey, 
                    string APIpassword, 
                    string Email, 
                    string CustomerID, 
                    bool UseOneClickPayment, 
                    string TransactionId, 
                    decimal TotalAmount, 
                    string Description, 
                    bool Use3DSecure, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool UseInstallment, 
                    bool UseCustomInstallments, 
                    string InstallmentRateTable, 
                    string ExtraParam, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentLinkSendType SendVia, 
                    string Phone, 
                    string CustomerName, 
                    string POSConfiguration, 
                    int LinkExpireHours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePaymentLink", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreatePaymentLinkResult> CreatePaymentLinkAsync(
                    string MerchantKey, 
                    string APIpassword, 
                    string Email, 
                    string CustomerID, 
                    bool UseOneClickPayment, 
                    string TransactionId, 
                    decimal TotalAmount, 
                    string Description, 
                    bool Use3DSecure, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool UseInstallment, 
                    bool UseCustomInstallments, 
                    string InstallmentRateTable, 
                    string ExtraParam, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentLinkSendType SendVia, 
                    string Phone, 
                    string CustomerName, 
                    string POSConfiguration, 
                    int LinkExpireHours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePaymentLinkForPaymentPlan", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreatePaymentLinkResult CreatePaymentLinkForPaymentPlan(string MerchantKey, string APIpassword, bool UseOneClickPayment, string TransactionId, int PaymentPlanLineId, bool Use3DSecure, bool RequestOTP, bool RequestCVV, bool UseInstallment, bool UseCustomInstallments, string InstallmentRateTable, RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentLinkSendType SendVia, string POSConfiguration, int LinkExpireHours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreatePaymentLinkForPaymentPlan", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreatePaymentLinkResult> CreatePaymentLinkForPaymentPlanAsync(string MerchantKey, string APIpassword, bool UseOneClickPayment, string TransactionId, int PaymentPlanLineId, bool Use3DSecure, bool RequestOTP, bool RequestCVV, bool UseInstallment, bool UseCustomInstallments, string InstallmentRateTable, RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentLinkSendType SendVia, string POSConfiguration, int LinkExpireHours);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCardSaveLink", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreateCardSaveLinkResult CreateCardSaveLink(string MerchantKey, string APIpassword, string Email, string CustomerID, RezaB.API.MobilExpress.MobilExpressServiceReference.FCCardSaveLinkSendType SendVia, string Phone, string CustomerName, string POSConfiguration, int LinkExpireHours, string ExtraParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCardSaveLink", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreateCardSaveLinkResult> CreateCardSaveLinkAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, RezaB.API.MobilExpress.MobilExpressServiceReference.FCCardSaveLinkSendType SendVia, string Phone, string CustomerName, string POSConfiguration, int LinkExpireHours, string ExtraParam);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTransactionList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetTransactionListResult GetTransactionList(string MerchantKey, string APIpassword, string Email, string CustomerID, string TransactionId, int POSID, string CardToken, RezaB.API.MobilExpress.MobilExpressServiceReference.FCTransType TransType, bool OnlySuccess, bool OnlyNotSuccess, string StartDate, string EndDate, int Page, string SortField, bool SortDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTransactionList", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetTransactionListResult> GetTransactionListAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string TransactionId, int POSID, string CardToken, RezaB.API.MobilExpress.MobilExpressServiceReference.FCTransType TransType, bool OnlySuccess, bool OnlyNotSuccess, string StartDate, string EndDate, int Page, string SortField, bool SortDesc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenInquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCTokenInquiryResult TokenInquiry(string MerchantKey, string APIpassword, string CardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TokenInquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCTokenInquiryResult> TokenInquiryAsync(string MerchantKey, string APIpassword, string CardNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CardInfoInquiry", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCCardInfoInquiryResult CardInfoInquiry(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CardInfoInquiry", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCCardInfoInquiryResult> CardInfoInquiryAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WireTransferRequest", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCGetPaymentPlanListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentWithCardResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCProcessPaymentResultBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FCPOSInfo))]
        RezaB.API.MobilExpress.MobilExpressServiceReference.FCWireTransferRequestResult WireTransferRequest(
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string Email, 
                    string CustomerID, 
                    int BankAccountID, 
                    decimal TotalAmount, 
                    string CustomerName, 
                    string CustomerPhone, 
                    string CustomerTCKN, 
                    string CustomerVal1, 
                    string CustomerVal2, 
                    string CustomerVal3, 
                    string AddressCode, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtParam, 
                    string NotificationURL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WireTransferRequest", ReplyAction="*")]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCWireTransferRequestResult> WireTransferRequestAsync(
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string Email, 
                    string CustomerID, 
                    int BankAccountID, 
                    decimal TotalAmount, 
                    string CustomerName, 
                    string CustomerPhone, 
                    string CustomerTCKN, 
                    string CustomerVal1, 
                    string CustomerVal2, 
                    string CustomerVal3, 
                    string AddressCode, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtParam, 
                    string NotificationURL);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCSendOTPForCardSaveResult {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidPhone,
        
        /// <remarks/>
        TooManyOTPSent,
        
        /// <remarks/>
        TooQuickOTPSent,
        
        /// <remarks/>
        SMSCouldNotSentTryAgain,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
        
        /// <remarks/>
        IVRSuccess,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCSaveCreditCardResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCSaveCardResultCode resultCodeField;
        
        private string cardTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCSaveCardResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CardToken {
            get {
                return this.cardTokenField;
            }
            set {
                this.cardTokenField = value;
                this.RaisePropertyChanged("CardToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCSaveCardResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        InvalidCardNum,
        
        /// <remarks/>
        InvalidMonth,
        
        /// <remarks/>
        InvalidYear,
        
        /// <remarks/>
        InvalidClientIP,
        
        /// <remarks/>
        DuplicateCard,
        
        /// <remarks/>
        InvalidPhone,
        
        /// <remarks/>
        NoOTPSentForVerification,
        
        /// <remarks/>
        InvalidOTP,
        
        /// <remarks/>
        TooLateOTPVerification,
        
        /// <remarks/>
        TooMuchOTPVerificationTried,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCWireTransferRequestResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCWireTransferRequestResultCode resultCodeField;
        
        private string errorMessageField;
        
        private string mobilexpressTransIdField;
        
        private string bankAccountIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCWireTransferRequestResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BankAccountID {
            get {
                return this.bankAccountIDField;
            }
            set {
                this.bankAccountIDField = value;
                this.RaisePropertyChanged("BankAccountID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCWireTransferRequestResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidAmount,
        
        /// <remarks/>
        InvalidTransactionId,
        
        /// <remarks/>
        DuplicateTransationId,
        
        /// <remarks/>
        RefusedByFraudPrevention,
        
        /// <remarks/>
        InvalidBankAccountId,
        
        /// <remarks/>
        RefTransactionNotFound,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCCardInfoInquiryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCCardInfoInquiryResultCode resultCodeField;
        
        private string customerIDField;
        
        private FCCreditCard cardInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCCardInfoInquiryResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
                this.RaisePropertyChanged("CustomerID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FCCreditCard CardInfo {
            get {
                return this.cardInfoField;
            }
            set {
                this.cardInfoField = value;
                this.RaisePropertyChanged("CardInfo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCCardInfoInquiryResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        CardNotFound,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        InvalidToken,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCCreditCard : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string maskedCardNumberField;
        
        private string cardTokenField;
        
        private System.Nullable<bool> isExpiredField;
        
        private bool isExpiredFieldSpecified;
        
        private System.Nullable<bool> consentApprovedField;
        
        private bool consentApprovedFieldSpecified;
        
        private bool finishPaymentRequiredField;
        
        private System.Nullable<bool> expiresIn90DaysField;
        
        private bool expiresIn90DaysFieldSpecified;
        
        private System.Nullable<int> lastYearField;
        
        private bool lastYearFieldSpecified;
        
        private System.Nullable<int> lastMonthField;
        
        private bool lastMonthFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string MaskedCardNumber {
            get {
                return this.maskedCardNumberField;
            }
            set {
                this.maskedCardNumberField = value;
                this.RaisePropertyChanged("MaskedCardNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CardToken {
            get {
                return this.cardTokenField;
            }
            set {
                this.cardTokenField = value;
                this.RaisePropertyChanged("CardToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public System.Nullable<bool> IsExpired {
            get {
                return this.isExpiredField;
            }
            set {
                this.isExpiredField = value;
                this.RaisePropertyChanged("IsExpired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsExpiredSpecified {
            get {
                return this.isExpiredFieldSpecified;
            }
            set {
                this.isExpiredFieldSpecified = value;
                this.RaisePropertyChanged("IsExpiredSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<bool> ConsentApproved {
            get {
                return this.consentApprovedField;
            }
            set {
                this.consentApprovedField = value;
                this.RaisePropertyChanged("ConsentApproved");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConsentApprovedSpecified {
            get {
                return this.consentApprovedFieldSpecified;
            }
            set {
                this.consentApprovedFieldSpecified = value;
                this.RaisePropertyChanged("ConsentApprovedSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool FinishPaymentRequired {
            get {
                return this.finishPaymentRequiredField;
            }
            set {
                this.finishPaymentRequiredField = value;
                this.RaisePropertyChanged("FinishPaymentRequired");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public System.Nullable<bool> ExpiresIn90Days {
            get {
                return this.expiresIn90DaysField;
            }
            set {
                this.expiresIn90DaysField = value;
                this.RaisePropertyChanged("ExpiresIn90Days");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiresIn90DaysSpecified {
            get {
                return this.expiresIn90DaysFieldSpecified;
            }
            set {
                this.expiresIn90DaysFieldSpecified = value;
                this.RaisePropertyChanged("ExpiresIn90DaysSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<int> LastYear {
            get {
                return this.lastYearField;
            }
            set {
                this.lastYearField = value;
                this.RaisePropertyChanged("LastYear");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastYearSpecified {
            get {
                return this.lastYearFieldSpecified;
            }
            set {
                this.lastYearFieldSpecified = value;
                this.RaisePropertyChanged("LastYearSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=7)]
        public System.Nullable<int> LastMonth {
            get {
                return this.lastMonthField;
            }
            set {
                this.lastMonthField = value;
                this.RaisePropertyChanged("LastMonth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastMonthSpecified {
            get {
                return this.lastMonthFieldSpecified;
            }
            set {
                this.lastMonthFieldSpecified = value;
                this.RaisePropertyChanged("LastMonthSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCTokenInquiryResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCTokenInquiryResultCode resultCodeField;
        
        private string cardTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCTokenInquiryResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CardToken {
            get {
                return this.cardTokenField;
            }
            set {
                this.cardTokenField = value;
                this.RaisePropertyChanged("CardToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCTokenInquiryResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidCardNumber,
        
        /// <remarks/>
        CardNotFound,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCTransaction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string transactionIdField;
        
        private int transTypeField;
        
        private bool is3DField;
        
        private System.Nullable<int> mobilexpressTransIdField;
        
        private System.DateTime transactionDateField;
        
        private string customerIdField;
        
        private string customerPhoneField;
        
        private string customerEmailField;
        
        private string customerNameField;
        
        private string customerTCKNField;
        
        private string merchantCustomerGroupNameField;
        
        private string customerVal1Field;
        
        private string customerVal2Field;
        
        private string customerVal3Field;
        
        private System.Nullable<decimal> baseAmountField;
        
        private System.Nullable<decimal> interestAmountField;
        
        private decimal totalAmountField;
        
        private System.Nullable<decimal> effectiveTotalField;
        
        private decimal rewardAmountField;
        
        private System.Nullable<int> installmentField;
        
        private System.Nullable<int> plusInstallmentCountField;
        
        private bool isStoredCardField;
        
        private string cardNumLogField;
        
        private string bankOfCardField;
        
        private System.Nullable<bool> isDebitField;
        
        private System.Nullable<bool> isBusinessCardField;
        
        private bool isSuccessField;
        
        private System.Nullable<bool> isBkmExpressField;
        
        private bool isPostauthedField;
        
        private bool isCancelledField;
        
        private bool isRefundedField;
        
        private decimal totalRefundField;
        
        private bool isAllRefundedField;
        
        private System.Nullable<int> referenceIdField;
        
        private string paymentDescField;
        
        private string paymentPlanIdField;
        
        private System.Nullable<int> paymentPlanLineIdField;
        
        private string merchantPaymentItemField;
        
        private string groupCodeField;
        
        private int pOSIDField;
        
        private string bankCodeField;
        
        private string bankReturnCodeField;
        
        private string bankAuthCodeField;
        
        private string bankReferenceIdField;
        
        private string bankMessageField;
        
        private string bankTransIdField;
        
        private System.Nullable<bool> isMOTOField;
        
        private System.Nullable<int> batchIdField;
        
        private System.Nullable<int> batchExeIdField;
        
        private string createMemberEmailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("Id");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
                this.RaisePropertyChanged("TransactionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int TransType {
            get {
                return this.transTypeField;
            }
            set {
                this.transTypeField = value;
                this.RaisePropertyChanged("TransType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Is3D {
            get {
                return this.is3DField;
            }
            set {
                this.is3DField = value;
                this.RaisePropertyChanged("Is3D");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<int> MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime TransactionDate {
            get {
                return this.transactionDateField;
            }
            set {
                this.transactionDateField = value;
                this.RaisePropertyChanged("TransactionDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
                this.RaisePropertyChanged("CustomerId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string CustomerPhone {
            get {
                return this.customerPhoneField;
            }
            set {
                this.customerPhoneField = value;
                this.RaisePropertyChanged("CustomerPhone");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string CustomerEmail {
            get {
                return this.customerEmailField;
            }
            set {
                this.customerEmailField = value;
                this.RaisePropertyChanged("CustomerEmail");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
                this.RaisePropertyChanged("CustomerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string CustomerTCKN {
            get {
                return this.customerTCKNField;
            }
            set {
                this.customerTCKNField = value;
                this.RaisePropertyChanged("CustomerTCKN");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string MerchantCustomerGroupName {
            get {
                return this.merchantCustomerGroupNameField;
            }
            set {
                this.merchantCustomerGroupNameField = value;
                this.RaisePropertyChanged("MerchantCustomerGroupName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string CustomerVal1 {
            get {
                return this.customerVal1Field;
            }
            set {
                this.customerVal1Field = value;
                this.RaisePropertyChanged("CustomerVal1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string CustomerVal2 {
            get {
                return this.customerVal2Field;
            }
            set {
                this.customerVal2Field = value;
                this.RaisePropertyChanged("CustomerVal2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string CustomerVal3 {
            get {
                return this.customerVal3Field;
            }
            set {
                this.customerVal3Field = value;
                this.RaisePropertyChanged("CustomerVal3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=15)]
        public System.Nullable<decimal> BaseAmount {
            get {
                return this.baseAmountField;
            }
            set {
                this.baseAmountField = value;
                this.RaisePropertyChanged("BaseAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=16)]
        public System.Nullable<decimal> InterestAmount {
            get {
                return this.interestAmountField;
            }
            set {
                this.interestAmountField = value;
                this.RaisePropertyChanged("InterestAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public decimal TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                this.totalAmountField = value;
                this.RaisePropertyChanged("TotalAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=18)]
        public System.Nullable<decimal> EffectiveTotal {
            get {
                return this.effectiveTotalField;
            }
            set {
                this.effectiveTotalField = value;
                this.RaisePropertyChanged("EffectiveTotal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public decimal RewardAmount {
            get {
                return this.rewardAmountField;
            }
            set {
                this.rewardAmountField = value;
                this.RaisePropertyChanged("RewardAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=20)]
        public System.Nullable<int> Installment {
            get {
                return this.installmentField;
            }
            set {
                this.installmentField = value;
                this.RaisePropertyChanged("Installment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=21)]
        public System.Nullable<int> PlusInstallmentCount {
            get {
                return this.plusInstallmentCountField;
            }
            set {
                this.plusInstallmentCountField = value;
                this.RaisePropertyChanged("PlusInstallmentCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public bool IsStoredCard {
            get {
                return this.isStoredCardField;
            }
            set {
                this.isStoredCardField = value;
                this.RaisePropertyChanged("IsStoredCard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string CardNumLog {
            get {
                return this.cardNumLogField;
            }
            set {
                this.cardNumLogField = value;
                this.RaisePropertyChanged("CardNumLog");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string BankOfCard {
            get {
                return this.bankOfCardField;
            }
            set {
                this.bankOfCardField = value;
                this.RaisePropertyChanged("BankOfCard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=25)]
        public System.Nullable<bool> IsDebit {
            get {
                return this.isDebitField;
            }
            set {
                this.isDebitField = value;
                this.RaisePropertyChanged("IsDebit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=26)]
        public System.Nullable<bool> IsBusinessCard {
            get {
                return this.isBusinessCardField;
            }
            set {
                this.isBusinessCardField = value;
                this.RaisePropertyChanged("IsBusinessCard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public bool IsSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                this.isSuccessField = value;
                this.RaisePropertyChanged("IsSuccess");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=28)]
        public System.Nullable<bool> IsBkmExpress {
            get {
                return this.isBkmExpressField;
            }
            set {
                this.isBkmExpressField = value;
                this.RaisePropertyChanged("IsBkmExpress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public bool IsPostauthed {
            get {
                return this.isPostauthedField;
            }
            set {
                this.isPostauthedField = value;
                this.RaisePropertyChanged("IsPostauthed");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public bool IsCancelled {
            get {
                return this.isCancelledField;
            }
            set {
                this.isCancelledField = value;
                this.RaisePropertyChanged("IsCancelled");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public bool IsRefunded {
            get {
                return this.isRefundedField;
            }
            set {
                this.isRefundedField = value;
                this.RaisePropertyChanged("IsRefunded");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public decimal TotalRefund {
            get {
                return this.totalRefundField;
            }
            set {
                this.totalRefundField = value;
                this.RaisePropertyChanged("TotalRefund");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        public bool IsAllRefunded {
            get {
                return this.isAllRefundedField;
            }
            set {
                this.isAllRefundedField = value;
                this.RaisePropertyChanged("IsAllRefunded");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=34)]
        public System.Nullable<int> ReferenceId {
            get {
                return this.referenceIdField;
            }
            set {
                this.referenceIdField = value;
                this.RaisePropertyChanged("ReferenceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=35)]
        public string PaymentDesc {
            get {
                return this.paymentDescField;
            }
            set {
                this.paymentDescField = value;
                this.RaisePropertyChanged("PaymentDesc");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=36)]
        public string PaymentPlanId {
            get {
                return this.paymentPlanIdField;
            }
            set {
                this.paymentPlanIdField = value;
                this.RaisePropertyChanged("PaymentPlanId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=37)]
        public System.Nullable<int> PaymentPlanLineId {
            get {
                return this.paymentPlanLineIdField;
            }
            set {
                this.paymentPlanLineIdField = value;
                this.RaisePropertyChanged("PaymentPlanLineId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=38)]
        public string MerchantPaymentItem {
            get {
                return this.merchantPaymentItemField;
            }
            set {
                this.merchantPaymentItemField = value;
                this.RaisePropertyChanged("MerchantPaymentItem");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=39)]
        public string GroupCode {
            get {
                return this.groupCodeField;
            }
            set {
                this.groupCodeField = value;
                this.RaisePropertyChanged("GroupCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=40)]
        public int POSID {
            get {
                return this.pOSIDField;
            }
            set {
                this.pOSIDField = value;
                this.RaisePropertyChanged("POSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=41)]
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
                this.RaisePropertyChanged("BankCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=42)]
        public string BankReturnCode {
            get {
                return this.bankReturnCodeField;
            }
            set {
                this.bankReturnCodeField = value;
                this.RaisePropertyChanged("BankReturnCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=43)]
        public string BankAuthCode {
            get {
                return this.bankAuthCodeField;
            }
            set {
                this.bankAuthCodeField = value;
                this.RaisePropertyChanged("BankAuthCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=44)]
        public string BankReferenceId {
            get {
                return this.bankReferenceIdField;
            }
            set {
                this.bankReferenceIdField = value;
                this.RaisePropertyChanged("BankReferenceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=45)]
        public string BankMessage {
            get {
                return this.bankMessageField;
            }
            set {
                this.bankMessageField = value;
                this.RaisePropertyChanged("BankMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=46)]
        public string BankTransId {
            get {
                return this.bankTransIdField;
            }
            set {
                this.bankTransIdField = value;
                this.RaisePropertyChanged("BankTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=47)]
        public System.Nullable<bool> IsMOTO {
            get {
                return this.isMOTOField;
            }
            set {
                this.isMOTOField = value;
                this.RaisePropertyChanged("IsMOTO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=48)]
        public System.Nullable<int> BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
                this.RaisePropertyChanged("BatchId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=49)]
        public System.Nullable<int> BatchExeId {
            get {
                return this.batchExeIdField;
            }
            set {
                this.batchExeIdField = value;
                this.RaisePropertyChanged("BatchExeId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=50)]
        public string CreateMemberEmail {
            get {
                return this.createMemberEmailField;
            }
            set {
                this.createMemberEmailField = value;
                this.RaisePropertyChanged("CreateMemberEmail");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCGetTransactionListResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCGetTransactionListResultCode resultCodeField;
        
        private int totalRecordCountField;
        
        private int pageCountField;
        
        private int currentPageField;
        
        private int pageRecordCountField;
        
        private FCTransaction[] transactionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCGetTransactionListResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int TotalRecordCount {
            get {
                return this.totalRecordCountField;
            }
            set {
                this.totalRecordCountField = value;
                this.RaisePropertyChanged("TotalRecordCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int PageCount {
            get {
                return this.pageCountField;
            }
            set {
                this.pageCountField = value;
                this.RaisePropertyChanged("PageCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int CurrentPage {
            get {
                return this.currentPageField;
            }
            set {
                this.currentPageField = value;
                this.RaisePropertyChanged("CurrentPage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int PageRecordCount {
            get {
                return this.pageRecordCountField;
            }
            set {
                this.pageRecordCountField = value;
                this.RaisePropertyChanged("PageRecordCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public FCTransaction[] Transactions {
            get {
                return this.transactionsField;
            }
            set {
                this.transactionsField = value;
                this.RaisePropertyChanged("Transactions");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCGetTransactionListResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCCreateCardSaveLinkResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCCreateCardSaveLinkResultCode resultCodeField;
        
        private string linkURLField;
        
        private string emailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCCreateCardSaveLinkResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string LinkURL {
            get {
                return this.linkURLField;
            }
            set {
                this.linkURLField = value;
                this.RaisePropertyChanged("LinkURL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCCreateCardSaveLinkResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        CustomerNotFound,
        
        /// <remarks/>
        InvalidCustomerEmail,
        
        /// <remarks/>
        EmailCouldNotSent,
        
        /// <remarks/>
        EmailMismatch,
        
        /// <remarks/>
        SMSCouldNotSent,
        
        /// <remarks/>
        InvalidCustomerPhone,
        
        /// <remarks/>
        TooManyRequestSent,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCCreatePaymentLinkResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCCreatePaymentLinkResultCode resultCodeField;
        
        private string transactionIdField;
        
        private string mobilexpressTransIdField;
        
        private string linkURLField;
        
        private string emailField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCCreatePaymentLinkResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
                this.RaisePropertyChanged("TransactionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string LinkURL {
            get {
                return this.linkURLField;
            }
            set {
                this.linkURLField = value;
                this.RaisePropertyChanged("LinkURL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCCreatePaymentLinkResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        CustomerNotFound,
        
        /// <remarks/>
        InvalidCustomerEmail,
        
        /// <remarks/>
        InvalidAmount,
        
        /// <remarks/>
        EmailMismatch,
        
        /// <remarks/>
        EmailCouldNotSent,
        
        /// <remarks/>
        BankAccountNotActive,
        
        /// <remarks/>
        CurrencyNotFound,
        
        /// <remarks/>
        PaymentPlanNotFound,
        
        /// <remarks/>
        SMSCouldNotSent,
        
        /// <remarks/>
        InvalidCustomerPhone,
        
        /// <remarks/>
        TooManyRequestSent,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
        
        /// <remarks/>
        InvalidTransactionId,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCPaymentPlanLineWP : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string paymentPlanIdField;
        
        private int paymentPlanLineIdField;
        
        private string emailField;
        
        private string customerIDField;
        
        private string customerNameField;
        
        private FCRecurringType recurringTypeField;
        
        private FCDate dueDateField;
        
        private decimal amountField;
        
        private bool isPaidField;
        
        private FCDate paymentDateField;
        
        private bool cardWillExpireField;
        
        private string maskedCardNumField;
        
        private string cardTokenField;
        
        private System.Nullable<int> pOSIDField;
        
        private bool automaticPaymentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PaymentPlanId {
            get {
                return this.paymentPlanIdField;
            }
            set {
                this.paymentPlanIdField = value;
                this.RaisePropertyChanged("PaymentPlanId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int PaymentPlanLineId {
            get {
                return this.paymentPlanLineIdField;
            }
            set {
                this.paymentPlanLineIdField = value;
                this.RaisePropertyChanged("PaymentPlanLineId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
                this.RaisePropertyChanged("CustomerID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
                this.RaisePropertyChanged("CustomerName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public FCRecurringType RecurringType {
            get {
                return this.recurringTypeField;
            }
            set {
                this.recurringTypeField = value;
                this.RaisePropertyChanged("RecurringType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public FCDate DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
                this.RaisePropertyChanged("DueDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool IsPaid {
            get {
                return this.isPaidField;
            }
            set {
                this.isPaidField = value;
                this.RaisePropertyChanged("IsPaid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public FCDate PaymentDate {
            get {
                return this.paymentDateField;
            }
            set {
                this.paymentDateField = value;
                this.RaisePropertyChanged("PaymentDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool CardWillExpire {
            get {
                return this.cardWillExpireField;
            }
            set {
                this.cardWillExpireField = value;
                this.RaisePropertyChanged("CardWillExpire");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string MaskedCardNum {
            get {
                return this.maskedCardNumField;
            }
            set {
                this.maskedCardNumField = value;
                this.RaisePropertyChanged("MaskedCardNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string CardToken {
            get {
                return this.cardTokenField;
            }
            set {
                this.cardTokenField = value;
                this.RaisePropertyChanged("CardToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=13)]
        public System.Nullable<int> POSID {
            get {
                return this.pOSIDField;
            }
            set {
                this.pOSIDField = value;
                this.RaisePropertyChanged("POSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public bool AutomaticPayment {
            get {
                return this.automaticPaymentField;
            }
            set {
                this.automaticPaymentField = value;
                this.RaisePropertyChanged("AutomaticPayment");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCRecurringType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Week,
        
        /// <remarks/>
        Month,
        
        /// <remarks/>
        Year,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCDate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int yearField;
        
        private int monthField;
        
        private int dayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
                this.RaisePropertyChanged("Year");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
                this.RaisePropertyChanged("Month");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Day {
            get {
                return this.dayField;
            }
            set {
                this.dayField = value;
                this.RaisePropertyChanged("Day");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FCPaymentPlanList))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCGetPaymentPlanListResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCGetPaymentPlanListResultCode resultCodeField;
        
        private FCPaymentPlanLineWP[] paymentPlanLinesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCGetPaymentPlanListResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public FCPaymentPlanLineWP[] PaymentPlanLines {
            get {
                return this.paymentPlanLinesField;
            }
            set {
                this.paymentPlanLinesField = value;
                this.RaisePropertyChanged("PaymentPlanLines");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCGetPaymentPlanListResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        CustomerNotFound,
        
        /// <remarks/>
        InvalidPaymentPlanId,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCPaymentPlanList : FCGetPaymentPlanListResult {
        
        private int totalRecordCountField;
        
        private int pageCountField;
        
        private int currentPageField;
        
        private int pageRecordCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int TotalRecordCount {
            get {
                return this.totalRecordCountField;
            }
            set {
                this.totalRecordCountField = value;
                this.RaisePropertyChanged("TotalRecordCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int PageCount {
            get {
                return this.pageCountField;
            }
            set {
                this.pageCountField = value;
                this.RaisePropertyChanged("PageCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int CurrentPage {
            get {
                return this.currentPageField;
            }
            set {
                this.currentPageField = value;
                this.RaisePropertyChanged("CurrentPage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int PageRecordCount {
            get {
                return this.pageRecordCountField;
            }
            set {
                this.pageRecordCountField = value;
                this.RaisePropertyChanged("PageRecordCount");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCPaymentPlanLine : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCDate dueDateField;
        
        private decimal amountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCDate DueDate {
            get {
                return this.dueDateField;
            }
            set {
                this.dueDateField = value;
                this.RaisePropertyChanged("DueDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCGetHostedPaymentProcessStatusResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCGetHostedPaymentProcessStatusResultCode resultCodeField;
        
        private string resultField;
        
        private string transactionIdField;
        
        private string mobilexpressTransIdField;
        
        private System.Nullable<int> pOSIDField;
        
        private bool usedStoredCardField;
        
        private int installmentCountField;
        
        private decimal totalAmountField;
        
        private decimal totalAmountWithInterestField;
        
        private string bankReturnCodeField;
        
        private string bankAuthCodeField;
        
        private string bankTransIdField;
        
        private string bankMessageField;
        
        private string bankCodeField;
        
        private string maskedCardNumField;
        
        private string cardTokenField;
        
        private decimal usedPointAmountField;
        
        private int extrCampInstallmentField;
        
        private string bankReferenceNoField;
        
        private System.Nullable<System.DateTime> bankHostDateField;
        
        private System.Nullable<int> paymentIdField;
        
        private bool cardSavedAfterPaymentField;
        
        private string paymentOptionField;
        
        private string emailField;
        
        private string customerIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCGetHostedPaymentProcessStatusResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
                this.RaisePropertyChanged("TransactionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public System.Nullable<int> POSID {
            get {
                return this.pOSIDField;
            }
            set {
                this.pOSIDField = value;
                this.RaisePropertyChanged("POSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool UsedStoredCard {
            get {
                return this.usedStoredCardField;
            }
            set {
                this.usedStoredCardField = value;
                this.RaisePropertyChanged("UsedStoredCard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int InstallmentCount {
            get {
                return this.installmentCountField;
            }
            set {
                this.installmentCountField = value;
                this.RaisePropertyChanged("InstallmentCount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public decimal TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                this.totalAmountField = value;
                this.RaisePropertyChanged("TotalAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public decimal TotalAmountWithInterest {
            get {
                return this.totalAmountWithInterestField;
            }
            set {
                this.totalAmountWithInterestField = value;
                this.RaisePropertyChanged("TotalAmountWithInterest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string BankReturnCode {
            get {
                return this.bankReturnCodeField;
            }
            set {
                this.bankReturnCodeField = value;
                this.RaisePropertyChanged("BankReturnCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string BankAuthCode {
            get {
                return this.bankAuthCodeField;
            }
            set {
                this.bankAuthCodeField = value;
                this.RaisePropertyChanged("BankAuthCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string BankTransId {
            get {
                return this.bankTransIdField;
            }
            set {
                this.bankTransIdField = value;
                this.RaisePropertyChanged("BankTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string BankMessage {
            get {
                return this.bankMessageField;
            }
            set {
                this.bankMessageField = value;
                this.RaisePropertyChanged("BankMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
                this.RaisePropertyChanged("BankCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string MaskedCardNum {
            get {
                return this.maskedCardNumField;
            }
            set {
                this.maskedCardNumField = value;
                this.RaisePropertyChanged("MaskedCardNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string CardToken {
            get {
                return this.cardTokenField;
            }
            set {
                this.cardTokenField = value;
                this.RaisePropertyChanged("CardToken");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public decimal UsedPointAmount {
            get {
                return this.usedPointAmountField;
            }
            set {
                this.usedPointAmountField = value;
                this.RaisePropertyChanged("UsedPointAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public int ExtrCampInstallment {
            get {
                return this.extrCampInstallmentField;
            }
            set {
                this.extrCampInstallmentField = value;
                this.RaisePropertyChanged("ExtrCampInstallment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string BankReferenceNo {
            get {
                return this.bankReferenceNoField;
            }
            set {
                this.bankReferenceNoField = value;
                this.RaisePropertyChanged("BankReferenceNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=19)]
        public System.Nullable<System.DateTime> BankHostDate {
            get {
                return this.bankHostDateField;
            }
            set {
                this.bankHostDateField = value;
                this.RaisePropertyChanged("BankHostDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=20)]
        public System.Nullable<int> PaymentId {
            get {
                return this.paymentIdField;
            }
            set {
                this.paymentIdField = value;
                this.RaisePropertyChanged("PaymentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public bool CardSavedAfterPayment {
            get {
                return this.cardSavedAfterPaymentField;
            }
            set {
                this.cardSavedAfterPaymentField = value;
                this.RaisePropertyChanged("CardSavedAfterPayment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string PaymentOption {
            get {
                return this.paymentOptionField;
            }
            set {
                this.paymentOptionField = value;
                this.RaisePropertyChanged("PaymentOption");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
                this.RaisePropertyChanged("Email");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
                this.RaisePropertyChanged("CustomerID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCGetHostedPaymentProcessStatusResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
        
        /// <remarks/>
        TransactionNotFound,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCStartHostedAccountManagementResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCStartHostedAccountManagementResultCode resultCodeField;
        
        private string mobilexpressTransIdField;
        
        private string redirectURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCStartHostedAccountManagementResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string RedirectURL {
            get {
                return this.redirectURLField;
            }
            set {
                this.redirectURLField = value;
                this.RaisePropertyChanged("RedirectURL");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCStartHostedAccountManagementResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidPhone,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCUpdateHostedPaymentProcessResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCUpdateHostedPaymentProcessResultCode resultCodeField;
        
        private string transactionIdField;
        
        private string mobilexpressTransIdField;
        
        private decimal totalAmountField;
        
        private decimal totalAmountWithInterestField;
        
        private decimal interestRateField;
        
        private int installmentField;
        
        private string maskCardNumField;
        
        private string redirectURLField;
        
        private FCPaymentInstruments paymentInstrumentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCUpdateHostedPaymentProcessResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
                this.RaisePropertyChanged("TransactionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal TotalAmount {
            get {
                return this.totalAmountField;
            }
            set {
                this.totalAmountField = value;
                this.RaisePropertyChanged("TotalAmount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public decimal TotalAmountWithInterest {
            get {
                return this.totalAmountWithInterestField;
            }
            set {
                this.totalAmountWithInterestField = value;
                this.RaisePropertyChanged("TotalAmountWithInterest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public decimal InterestRate {
            get {
                return this.interestRateField;
            }
            set {
                this.interestRateField = value;
                this.RaisePropertyChanged("InterestRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public int Installment {
            get {
                return this.installmentField;
            }
            set {
                this.installmentField = value;
                this.RaisePropertyChanged("Installment");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string MaskCardNum {
            get {
                return this.maskCardNumField;
            }
            set {
                this.maskCardNumField = value;
                this.RaisePropertyChanged("MaskCardNum");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string RedirectURL {
            get {
                return this.redirectURLField;
            }
            set {
                this.redirectURLField = value;
                this.RaisePropertyChanged("RedirectURL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public FCPaymentInstruments PaymentInstrument {
            get {
                return this.paymentInstrumentField;
            }
            set {
                this.paymentInstrumentField = value;
                this.RaisePropertyChanged("PaymentInstrument");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCUpdateHostedPaymentProcessResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        TransactionNotFound,
        
        /// <remarks/>
        InvalidState,
        
        /// <remarks/>
        InvalidAmount,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCPaymentInstruments {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        StoredCard,
        
        /// <remarks/>
        NewCard,
        
        /// <remarks/>
        BKMExpress,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCStartHostedPaymentProcessResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCStartHostedPaymentProcessResultCode resultCodeField;
        
        private string transactionIdField;
        
        private string mobilexpressTransIdField;
        
        private string redirectURLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCStartHostedPaymentProcessResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TransactionId {
            get {
                return this.transactionIdField;
            }
            set {
                this.transactionIdField = value;
                this.RaisePropertyChanged("TransactionId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string RedirectURL {
            get {
                return this.redirectURLField;
            }
            set {
                this.redirectURLField = value;
                this.RaisePropertyChanged("RedirectURL");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCStartHostedPaymentProcessResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidPhone,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        InvalidAmount,
        
        /// <remarks/>
        InvalidReturnURL,
        
        /// <remarks/>
        InvalidTransactionId,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
        
        /// <remarks/>
        InvalidParameter,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FCProcessPaymentWithCardResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FCLoyaltyPointInquiryWithCardResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCProcessPaymentWithCardResultBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCProcessPaymentWithCardResultCode resultCodeField;
        
        private string errorMessageField;
        
        private string mobilexpressTransIdField;
        
        private string bankReturnCodeField;
        
        private string bankAuthCodeField;
        
        private string bankTransIdField;
        
        private string bankMessageField;
        
        private string pOSIDField;
        
        private string threeDRedirectURLField;
        
        private string cardHolderNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCProcessPaymentWithCardResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BankReturnCode {
            get {
                return this.bankReturnCodeField;
            }
            set {
                this.bankReturnCodeField = value;
                this.RaisePropertyChanged("BankReturnCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string BankAuthCode {
            get {
                return this.bankAuthCodeField;
            }
            set {
                this.bankAuthCodeField = value;
                this.RaisePropertyChanged("BankAuthCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string BankTransId {
            get {
                return this.bankTransIdField;
            }
            set {
                this.bankTransIdField = value;
                this.RaisePropertyChanged("BankTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string BankMessage {
            get {
                return this.bankMessageField;
            }
            set {
                this.bankMessageField = value;
                this.RaisePropertyChanged("BankMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string POSID {
            get {
                return this.pOSIDField;
            }
            set {
                this.pOSIDField = value;
                this.RaisePropertyChanged("POSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ThreeDRedirectURL {
            get {
                return this.threeDRedirectURLField;
            }
            set {
                this.threeDRedirectURLField = value;
                this.RaisePropertyChanged("ThreeDRedirectURL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string CardHolderName {
            get {
                return this.cardHolderNameField;
            }
            set {
                this.cardHolderNameField = value;
                this.RaisePropertyChanged("CardHolderName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCProcessPaymentWithCardResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidAmount,
        
        /// <remarks/>
        InvalidInstallment,
        
        /// <remarks/>
        CardRefused,
        
        /// <remarks/>
        CardExpired,
        
        /// <remarks/>
        InvalidBankPosId,
        
        /// <remarks/>
        RefTransactionNotFound,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
        
        /// <remarks/>
        CVVRequired,
        
        /// <remarks/>
        InvalidCardNum,
        
        /// <remarks/>
        InvalidMonth,
        
        /// <remarks/>
        InvalidYear,
        
        /// <remarks/>
        InvalidCVV,
        
        /// <remarks/>
        ThreeDSecureURLCreated,
        
        /// <remarks/>
        ThreeDValidationFailed,
        
        /// <remarks/>
        InvalidReturnURL,
        
        /// <remarks/>
        InvalidTransactionId,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCProcessPaymentWithCardResult : FCProcessPaymentWithCardResultBase {
        
        private decimal usedLoyaltyPointField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public decimal UsedLoyaltyPoint {
            get {
                return this.usedLoyaltyPointField;
            }
            set {
                this.usedLoyaltyPointField = value;
                this.RaisePropertyChanged("UsedLoyaltyPoint");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCLoyaltyPointInquiryWithCardResult : FCProcessPaymentWithCardResultBase {
        
        private FCPointInfo loyaltyPointInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCPointInfo LoyaltyPointInfo {
            get {
                return this.loyaltyPointInfoField;
            }
            set {
                this.loyaltyPointInfoField = value;
                this.RaisePropertyChanged("LoyaltyPointInfo");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCPointInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal amountField;
        
        private string currencyCodeField;
        
        private string cardProgramNameField;
        
        private string bankNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public decimal Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
                this.RaisePropertyChanged("CurrencyCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CardProgramName {
            get {
                return this.cardProgramNameField;
            }
            set {
                this.cardProgramNameField = value;
                this.RaisePropertyChanged("CardProgramName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
                this.RaisePropertyChanged("BankName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCTransactionDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorMessageField;
        
        private string mobilexpressTransIdField;
        
        private string bankReturnCodeField;
        
        private string bankAuthCodeField;
        
        private string bankTransIdField;
        
        private string bankMessageField;
        
        private System.Nullable<int> paymentIdField;
        
        private string bankReferenceNoField;
        
        private System.Nullable<System.DateTime> bankHostDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string BankReturnCode {
            get {
                return this.bankReturnCodeField;
            }
            set {
                this.bankReturnCodeField = value;
                this.RaisePropertyChanged("BankReturnCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BankAuthCode {
            get {
                return this.bankAuthCodeField;
            }
            set {
                this.bankAuthCodeField = value;
                this.RaisePropertyChanged("BankAuthCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string BankTransId {
            get {
                return this.bankTransIdField;
            }
            set {
                this.bankTransIdField = value;
                this.RaisePropertyChanged("BankTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string BankMessage {
            get {
                return this.bankMessageField;
            }
            set {
                this.bankMessageField = value;
                this.RaisePropertyChanged("BankMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public System.Nullable<int> PaymentId {
            get {
                return this.paymentIdField;
            }
            set {
                this.paymentIdField = value;
                this.RaisePropertyChanged("PaymentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string BankReferenceNo {
            get {
                return this.bankReferenceNoField;
            }
            set {
                this.bankReferenceNoField = value;
                this.RaisePropertyChanged("BankReferenceNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=8)]
        public System.Nullable<System.DateTime> BankHostDate {
            get {
                return this.bankHostDateField;
            }
            set {
                this.bankHostDateField = value;
                this.RaisePropertyChanged("BankHostDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FCProcessPaymentResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FCPaymentInquiryResult))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FCLoyaltyPointInquiryResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCProcessPaymentResultBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCProcessPaymentResultCode resultCodeField;
        
        private string errorMessageField;
        
        private string mobilexpressTransIdField;
        
        private string bankReturnCodeField;
        
        private string bankAuthCodeField;
        
        private string bankTransIdField;
        
        private string bankMessageField;
        
        private string pOSIDField;
        
        private string threeDRedirectURLField;
        
        private string cardHolderNameField;
        
        private System.Nullable<int> paymentIdField;
        
        private string bankReferenceNoField;
        
        private System.Nullable<System.DateTime> bankHostDateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCProcessPaymentResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MobilexpressTransId {
            get {
                return this.mobilexpressTransIdField;
            }
            set {
                this.mobilexpressTransIdField = value;
                this.RaisePropertyChanged("MobilexpressTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string BankReturnCode {
            get {
                return this.bankReturnCodeField;
            }
            set {
                this.bankReturnCodeField = value;
                this.RaisePropertyChanged("BankReturnCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string BankAuthCode {
            get {
                return this.bankAuthCodeField;
            }
            set {
                this.bankAuthCodeField = value;
                this.RaisePropertyChanged("BankAuthCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string BankTransId {
            get {
                return this.bankTransIdField;
            }
            set {
                this.bankTransIdField = value;
                this.RaisePropertyChanged("BankTransId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string BankMessage {
            get {
                return this.bankMessageField;
            }
            set {
                this.bankMessageField = value;
                this.RaisePropertyChanged("BankMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string POSID {
            get {
                return this.pOSIDField;
            }
            set {
                this.pOSIDField = value;
                this.RaisePropertyChanged("POSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string ThreeDRedirectURL {
            get {
                return this.threeDRedirectURLField;
            }
            set {
                this.threeDRedirectURLField = value;
                this.RaisePropertyChanged("ThreeDRedirectURL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string CardHolderName {
            get {
                return this.cardHolderNameField;
            }
            set {
                this.cardHolderNameField = value;
                this.RaisePropertyChanged("CardHolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=10)]
        public System.Nullable<int> PaymentId {
            get {
                return this.paymentIdField;
            }
            set {
                this.paymentIdField = value;
                this.RaisePropertyChanged("PaymentId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string BankReferenceNo {
            get {
                return this.bankReferenceNoField;
            }
            set {
                this.bankReferenceNoField = value;
                this.RaisePropertyChanged("BankReferenceNo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=12)]
        public System.Nullable<System.DateTime> BankHostDate {
            get {
                return this.bankHostDateField;
            }
            set {
                this.bankHostDateField = value;
                this.RaisePropertyChanged("BankHostDate");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCProcessPaymentResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidAmount,
        
        /// <remarks/>
        InvalidInstallment,
        
        /// <remarks/>
        CardRefused,
        
        /// <remarks/>
        CardExpired,
        
        /// <remarks/>
        InvalidBankPosId,
        
        /// <remarks/>
        RefTransactionNotFound,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
        
        /// <remarks/>
        CVVRequired,
        
        /// <remarks/>
        CardNotFound,
        
        /// <remarks/>
        CustomerNotFound,
        
        /// <remarks/>
        OTPRequired,
        
        /// <remarks/>
        CVVAndOTPRequired,
        
        /// <remarks/>
        OTPCouldNotSend,
        
        /// <remarks/>
        InvalidOTP,
        
        /// <remarks/>
        TooLateOTPVerification,
        
        /// <remarks/>
        TooMuchOTPVerificationTried,
        
        /// <remarks/>
        TooManyOTPSent,
        
        /// <remarks/>
        TooQuickOTPSent,
        
        /// <remarks/>
        ThreeDSecureURLCreated,
        
        /// <remarks/>
        ThreeDValidationFailed,
        
        /// <remarks/>
        InvalidReturnURL,
        
        /// <remarks/>
        InvalidTransactionId,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FCPaymentInquiryResult))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCProcessPaymentResult : FCProcessPaymentResultBase {
        
        private decimal usedLoyaltyPointField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public decimal UsedLoyaltyPoint {
            get {
                return this.usedLoyaltyPointField;
            }
            set {
                this.usedLoyaltyPointField = value;
                this.RaisePropertyChanged("UsedLoyaltyPoint");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCPaymentInquiryResult : FCProcessPaymentResult {
        
        private decimal totalRefundField;
        
        private FCTransactionDetail[] transactionDetailListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public decimal TotalRefund {
            get {
                return this.totalRefundField;
            }
            set {
                this.totalRefundField = value;
                this.RaisePropertyChanged("TotalRefund");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public FCTransactionDetail[] TransactionDetailList {
            get {
                return this.transactionDetailListField;
            }
            set {
                this.transactionDetailListField = value;
                this.RaisePropertyChanged("TransactionDetailList");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCLoyaltyPointInquiryResult : FCProcessPaymentResultBase {
        
        private FCPointInfo loyaltyPointInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCPointInfo LoyaltyPointInfo {
            get {
                return this.loyaltyPointInfoField;
            }
            set {
                this.loyaltyPointInfoField = value;
                this.RaisePropertyChanged("LoyaltyPointInfo");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCGetBankOfBINResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCGetBankOfBINResultCode resultCodeField;
        
        private string bankCodeField;
        
        private string cardTypeField;
        
        private bool isDebitCardField;
        
        private string cardProgramNameField;
        
        private bool isBusinessCardField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCGetBankOfBINResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
                this.RaisePropertyChanged("BankCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
                this.RaisePropertyChanged("CardType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsDebitCard {
            get {
                return this.isDebitCardField;
            }
            set {
                this.isDebitCardField = value;
                this.RaisePropertyChanged("IsDebitCard");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string CardProgramName {
            get {
                return this.cardProgramNameField;
            }
            set {
                this.cardProgramNameField = value;
                this.RaisePropertyChanged("CardProgramName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool IsBusinessCard {
            get {
                return this.isBusinessCardField;
            }
            set {
                this.isBusinessCardField = value;
                this.RaisePropertyChanged("IsBusinessCard");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCGetBankOfBINResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        NotFound,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCGetCreditCardListResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCGetCreditCardListResultCode resultCodeField;
        
        private FCCreditCard[] cardListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCGetCreditCardListResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public FCCreditCard[] CardList {
            get {
                return this.cardListField;
            }
            set {
                this.cardListField = value;
                this.RaisePropertyChanged("CardList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCGetCreditCardListResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        CardNotFound,
        
        /// <remarks/>
        CardFoundOTPRequired,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        InvalidState,
        
        /// <remarks/>
        InvalidOTP,
        
        /// <remarks/>
        TooMuchOTPVerificationTried,
        
        /// <remarks/>
        InvalidPhone,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCUpdateCreditCardResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCUpdateCardResultCode resultCodeField;
        
        private string cardTokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCUpdateCardResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CardToken {
            get {
                return this.cardTokenField;
            }
            set {
                this.cardTokenField = value;
                this.RaisePropertyChanged("CardToken");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCUpdateCardResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        CustomerNotFound,
        
        /// <remarks/>
        CardNotFound,
        
        /// <remarks/>
        InvalidCardNum,
        
        /// <remarks/>
        InvalidMonth,
        
        /// <remarks/>
        InvalidYear,
        
        /// <remarks/>
        DuplicateCard,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FCPOSInfoEx))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCPOSInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int pOSIDField;
        
        private string titleField;
        
        private string bankCodeField;
        
        private System.Nullable<int> currencyCodeField;
        
        private string merchantIDField;
        
        private string clientIDField;
        
        private string subMerchantOrMerchantGroupField;
        
        private string extraInfoField;
        
        private bool isDefaultField;
        
        private bool isActiveField;
        
        private bool isMOTOField;
        
        private string merchantPosInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int POSID {
            get {
                return this.pOSIDField;
            }
            set {
                this.pOSIDField = value;
                this.RaisePropertyChanged("POSID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string BankCode {
            get {
                return this.bankCodeField;
            }
            set {
                this.bankCodeField = value;
                this.RaisePropertyChanged("BankCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public System.Nullable<int> CurrencyCode {
            get {
                return this.currencyCodeField;
            }
            set {
                this.currencyCodeField = value;
                this.RaisePropertyChanged("CurrencyCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string MerchantID {
            get {
                return this.merchantIDField;
            }
            set {
                this.merchantIDField = value;
                this.RaisePropertyChanged("MerchantID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
                this.RaisePropertyChanged("ClientID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string SubMerchantOrMerchantGroup {
            get {
                return this.subMerchantOrMerchantGroupField;
            }
            set {
                this.subMerchantOrMerchantGroupField = value;
                this.RaisePropertyChanged("SubMerchantOrMerchantGroup");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ExtraInfo {
            get {
                return this.extraInfoField;
            }
            set {
                this.extraInfoField = value;
                this.RaisePropertyChanged("ExtraInfo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
                this.RaisePropertyChanged("IsDefault");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public bool IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
                this.RaisePropertyChanged("IsActive");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public bool IsMOTO {
            get {
                return this.isMOTOField;
            }
            set {
                this.isMOTOField = value;
                this.RaisePropertyChanged("IsMOTO");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string MerchantPosInfo {
            get {
                return this.merchantPosInfoField;
            }
            set {
                this.merchantPosInfoField = value;
                this.RaisePropertyChanged("MerchantPosInfo");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCPOSInfoEx : FCPOSInfo {
        
        private string cardProgramsField;
        
        private bool supportAmexField;
        
        private bool defaultAmexPOSField;
        
        private bool nonInstallmentPOSField;
        
        private bool foreignPOSField;
        
        private bool foreignAmexPOSField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string CardPrograms {
            get {
                return this.cardProgramsField;
            }
            set {
                this.cardProgramsField = value;
                this.RaisePropertyChanged("CardPrograms");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool SupportAmex {
            get {
                return this.supportAmexField;
            }
            set {
                this.supportAmexField = value;
                this.RaisePropertyChanged("SupportAmex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool DefaultAmexPOS {
            get {
                return this.defaultAmexPOSField;
            }
            set {
                this.defaultAmexPOSField = value;
                this.RaisePropertyChanged("DefaultAmexPOS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool NonInstallmentPOS {
            get {
                return this.nonInstallmentPOSField;
            }
            set {
                this.nonInstallmentPOSField = value;
                this.RaisePropertyChanged("NonInstallmentPOS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool ForeignPOS {
            get {
                return this.foreignPOSField;
            }
            set {
                this.foreignPOSField = value;
                this.RaisePropertyChanged("ForeignPOS");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public bool ForeignAmexPOS {
            get {
                return this.foreignAmexPOSField;
            }
            set {
                this.foreignAmexPOSField = value;
                this.RaisePropertyChanged("ForeignAmexPOS");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCPOSInfoList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCGetPOSInfoListResultCode resultCodeField;
        
        private FCPOSInfoEx[] pOSInfoListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCGetPOSInfoListResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public FCPOSInfoEx[] POSInfoList {
            get {
                return this.pOSInfoListField;
            }
            set {
                this.pOSInfoListField = value;
                this.RaisePropertyChanged("POSInfoList");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCGetPOSInfoListResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class FCSavePOSInfoResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FCSavePOSInfoResultCode resultCodeField;
        
        private string errorMessageField;
        
        private int pOSIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FCSavePOSInfoResultCode ResultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("ResultCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
                this.RaisePropertyChanged("ErrorMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int POSID {
            get {
                return this.pOSIDField;
            }
            set {
                this.pOSIDField = value;
                this.RaisePropertyChanged("POSID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCSavePOSInfoResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidParameter,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCSaveCustomerResultCode {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCFindCustomerResultCode {
        
        /// <remarks/>
        Found,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        NotFound,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPOSInfoList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPOSInfoListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string MerchantKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string APIpassword;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> POSID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string BankCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CurrencyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsActive;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=6)]
        public string MerchantPosInfo;
        
        public GetPOSInfoListRequest() {
        }
        
        public GetPOSInfoListRequest(string MerchantKey, string APIpassword, System.Nullable<int> POSID, string BankCode, System.Nullable<int> CurrencyCode, System.Nullable<bool> IsActive, string MerchantPosInfo) {
            this.MerchantKey = MerchantKey;
            this.APIpassword = APIpassword;
            this.POSID = POSID;
            this.BankCode = BankCode;
            this.CurrencyCode = CurrencyCode;
            this.IsActive = IsActive;
            this.MerchantPosInfo = MerchantPosInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetPOSInfoListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetPOSInfoListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCPOSInfoList GetPOSInfoListResult;
        
        public GetPOSInfoListResponse() {
        }
        
        public GetPOSInfoListResponse(RezaB.API.MobilExpress.MobilExpressServiceReference.FCPOSInfoList GetPOSInfoListResult) {
            this.GetPOSInfoListResult = GetPOSInfoListResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCSendOTPForCardListResult {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidState,
        
        /// <remarks/>
        InvalidPhone,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        TooManyOTPSent,
        
        /// <remarks/>
        TooQuickOTPSent,
        
        /// <remarks/>
        SMSCouldNotSentTryAgain,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
        
        /// <remarks/>
        IVRSuccess,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCDeleteCardResult {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        CustomerNotFound,
        
        /// <remarks/>
        InvalidCardToken,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCDeleteAllCardsResult {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidCustomerID,
        
        /// <remarks/>
        CustomerNotFound,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCProcessType {
        
        /// <remarks/>
        sales,
        
        /// <remarks/>
        cancel,
        
        /// <remarks/>
        refund,
        
        /// <remarks/>
        preauth,
        
        /// <remarks/>
        postauth,
        
        /// <remarks/>
        release,
        
        /// <remarks/>
        wireTransfer,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum PGProcessType {
        
        /// <remarks/>
        PGWithLogin,
        
        /// <remarks/>
        HostedPage,
        
        /// <remarks/>
        HostedPrePayment,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum PGViewType {
        
        /// <remarks/>
        Full,
        
        /// <remarks/>
        Medium,
        
        /// <remarks/>
        Compact,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCCurrency {
        
        /// <remarks/>
        TRY,
        
        /// <remarks/>
        EUR,
        
        /// <remarks/>
        USD,
        
        /// <remarks/>
        GBP,
        
        /// <remarks/>
        JPY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCSavePaymentPlanResult {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        CustomerNotFound,
        
        /// <remarks/>
        CardNotFound,
        
        /// <remarks/>
        CardNotSuitableForPaymentPlan,
        
        /// <remarks/>
        InvalidPaymentPlanId,
        
        /// <remarks/>
        InvalidLineCount,
        
        /// <remarks/>
        InvalidDueDate,
        
        /// <remarks/>
        InvalidAmount,
        
        /// <remarks/>
        InvalidBankPosId,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCSaveBlackListItemResult {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        InvalidCardNumber,
        
        /// <remarks/>
        InvalidEmail,
        
        /// <remarks/>
        InvalidPhone,
        
        /// <remarks/>
        InvalidTCKN,
        
        /// <remarks/>
        InvalidClientIP,
        
        /// <remarks/>
        AuthenticationError,
        
        /// <remarks/>
        ServerError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCPaymentLinkSendType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Email,
        
        /// <remarks/>
        SMS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCCardSaveLinkSendType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Email,
        
        /// <remarks/>
        SMS,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum FCTransType {
        
        /// <remarks/>
        sales,
        
        /// <remarks/>
        cancel,
        
        /// <remarks/>
        refund,
        
        /// <remarks/>
        preauth,
        
        /// <remarks/>
        postauth,
        
        /// <remarks/>
        bonusQry,
        
        /// <remarks/>
        release,
        
        /// <remarks/>
        wireTransfer,
        
        /// <remarks/>
        all,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface FastCheckoutServiceSoapChannel : RezaB.API.MobilExpress.MobilExpressServiceReference.FastCheckoutServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FastCheckoutServiceSoapClient : System.ServiceModel.ClientBase<RezaB.API.MobilExpress.MobilExpressServiceReference.FastCheckoutServiceSoap>, RezaB.API.MobilExpress.MobilExpressServiceReference.FastCheckoutServiceSoap {
        
        public FastCheckoutServiceSoapClient() {
        }
        
        public FastCheckoutServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FastCheckoutServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FastCheckoutServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FastCheckoutServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCSendOTPForCardSaveResult SendOTPForCardSave(string MerchantKey, string APIpassword, string Phone, string ClientIP, string ClientUserAgent) {
            return base.Channel.SendOTPForCardSave(MerchantKey, APIpassword, Phone, ClientIP, ClientUserAgent);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSendOTPForCardSaveResult> SendOTPForCardSaveAsync(string MerchantKey, string APIpassword, string Phone, string ClientIP, string ClientUserAgent) {
            return base.Channel.SendOTPForCardSaveAsync(MerchantKey, APIpassword, Phone, ClientIP, ClientUserAgent);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveCreditCardResult SaveCreditCard(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string CustomerName, string CardNumber, string CardHolderName, int CardMonth, int CardYear, string ClientIP, string ClientUserAgent, string VerificationOTP) {
            return base.Channel.SaveCreditCard(MerchantKey, APIpassword, Phone, Email, CustomerID, CustomerName, CardNumber, CardHolderName, CardMonth, CardYear, ClientIP, ClientUserAgent, VerificationOTP);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveCreditCardResult> SaveCreditCardAsync(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string CustomerName, string CardNumber, string CardHolderName, int CardMonth, int CardYear, string ClientIP, string ClientUserAgent, string VerificationOTP) {
            return base.Channel.SaveCreditCardAsync(MerchantKey, APIpassword, Phone, Email, CustomerID, CustomerName, CardNumber, CardHolderName, CardMonth, CardYear, ClientIP, ClientUserAgent, VerificationOTP);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveCustomerResultCode SaveCustomer(string MerchantKey, string APIpassword, string Email, string CustomerID, string CustomerName, string Phone, string TCKNVKN, string Password, string CustomField1, string CustomField2, string CustomField3, bool Active, string ClientIP) {
            return base.Channel.SaveCustomer(MerchantKey, APIpassword, Email, CustomerID, CustomerName, Phone, TCKNVKN, Password, CustomField1, CustomField2, CustomField3, Active, ClientIP);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveCustomerResultCode> SaveCustomerAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string CustomerName, string Phone, string TCKNVKN, string Password, string CustomField1, string CustomField2, string CustomField3, bool Active, string ClientIP) {
            return base.Channel.SaveCustomerAsync(MerchantKey, APIpassword, Email, CustomerID, CustomerName, Phone, TCKNVKN, Password, CustomField1, CustomField2, CustomField3, Active, ClientIP);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCFindCustomerResultCode FindCustomer(string MerchantKey, string APIpassword, string Email, string CustomerID, string ClientIP) {
            return base.Channel.FindCustomer(MerchantKey, APIpassword, Email, CustomerID, ClientIP);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCFindCustomerResultCode> FindCustomerAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string ClientIP) {
            return base.Channel.FindCustomerAsync(MerchantKey, APIpassword, Email, CustomerID, ClientIP);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCSavePOSInfoResult SavePOSInfo(
                    string MerchantKey, 
                    string APIpassword, 
                    string BankCode, 
                    int CurrencyCode, 
                    string MerchantID, 
                    string ClientID, 
                    string SubMerchantorMerchantGroup, 
                    string APIUserName, 
                    string APIUserPassword, 
                    string APICancelUserName, 
                    string APICancelUserPassword, 
                    string StoreKey, 
                    string ServiceAddress, 
                    string GatewayAddress3D, 
                    string ExtraInfo, 
                    bool IsDefault, 
                    bool IsActive, 
                    bool IsMOTO, 
                    string MerchantPosInfo, 
                    string Title, 
                    string CardPrograms, 
                    bool SupportAmex, 
                    bool DefaultAmexPOS, 
                    bool NonInstallmentPOS, 
                    bool ForeignPOS, 
                    bool ForeignAmexPOS, 
                    bool Always3D, 
                    bool Customer3DManualCard, 
                    bool Customer3DStoredCard) {
            return base.Channel.SavePOSInfo(MerchantKey, APIpassword, BankCode, CurrencyCode, MerchantID, ClientID, SubMerchantorMerchantGroup, APIUserName, APIUserPassword, APICancelUserName, APICancelUserPassword, StoreKey, ServiceAddress, GatewayAddress3D, ExtraInfo, IsDefault, IsActive, IsMOTO, MerchantPosInfo, Title, CardPrograms, SupportAmex, DefaultAmexPOS, NonInstallmentPOS, ForeignPOS, ForeignAmexPOS, Always3D, Customer3DManualCard, Customer3DStoredCard);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSavePOSInfoResult> SavePOSInfoAsync(
                    string MerchantKey, 
                    string APIpassword, 
                    string BankCode, 
                    int CurrencyCode, 
                    string MerchantID, 
                    string ClientID, 
                    string SubMerchantorMerchantGroup, 
                    string APIUserName, 
                    string APIUserPassword, 
                    string APICancelUserName, 
                    string APICancelUserPassword, 
                    string StoreKey, 
                    string ServiceAddress, 
                    string GatewayAddress3D, 
                    string ExtraInfo, 
                    bool IsDefault, 
                    bool IsActive, 
                    bool IsMOTO, 
                    string MerchantPosInfo, 
                    string Title, 
                    string CardPrograms, 
                    bool SupportAmex, 
                    bool DefaultAmexPOS, 
                    bool NonInstallmentPOS, 
                    bool ForeignPOS, 
                    bool ForeignAmexPOS, 
                    bool Always3D, 
                    bool Customer3DManualCard, 
                    bool Customer3DStoredCard) {
            return base.Channel.SavePOSInfoAsync(MerchantKey, APIpassword, BankCode, CurrencyCode, MerchantID, ClientID, SubMerchantorMerchantGroup, APIUserName, APIUserPassword, APICancelUserName, APICancelUserPassword, StoreKey, ServiceAddress, GatewayAddress3D, ExtraInfo, IsDefault, IsActive, IsMOTO, MerchantPosInfo, Title, CardPrograms, SupportAmex, DefaultAmexPOS, NonInstallmentPOS, ForeignPOS, ForeignAmexPOS, Always3D, Customer3DManualCard, Customer3DStoredCard);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListResponse RezaB.API.MobilExpress.MobilExpressServiceReference.FastCheckoutServiceSoap.GetPOSInfoList(RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListRequest request) {
            return base.Channel.GetPOSInfoList(request);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCPOSInfoList GetPOSInfoList(string MerchantKey, string APIpassword, System.Nullable<int> POSID, string BankCode, System.Nullable<int> CurrencyCode, System.Nullable<bool> IsActive, string MerchantPosInfo) {
            RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListRequest inValue = new RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListRequest();
            inValue.MerchantKey = MerchantKey;
            inValue.APIpassword = APIpassword;
            inValue.POSID = POSID;
            inValue.BankCode = BankCode;
            inValue.CurrencyCode = CurrencyCode;
            inValue.IsActive = IsActive;
            inValue.MerchantPosInfo = MerchantPosInfo;
            RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListResponse retVal = ((RezaB.API.MobilExpress.MobilExpressServiceReference.FastCheckoutServiceSoap)(this)).GetPOSInfoList(inValue);
            return retVal.GetPOSInfoListResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListResponse> RezaB.API.MobilExpress.MobilExpressServiceReference.FastCheckoutServiceSoap.GetPOSInfoListAsync(RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListRequest request) {
            return base.Channel.GetPOSInfoListAsync(request);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListResponse> GetPOSInfoListAsync(string MerchantKey, string APIpassword, System.Nullable<int> POSID, string BankCode, System.Nullable<int> CurrencyCode, System.Nullable<bool> IsActive, string MerchantPosInfo) {
            RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListRequest inValue = new RezaB.API.MobilExpress.MobilExpressServiceReference.GetPOSInfoListRequest();
            inValue.MerchantKey = MerchantKey;
            inValue.APIpassword = APIpassword;
            inValue.POSID = POSID;
            inValue.BankCode = BankCode;
            inValue.CurrencyCode = CurrencyCode;
            inValue.IsActive = IsActive;
            inValue.MerchantPosInfo = MerchantPosInfo;
            return ((RezaB.API.MobilExpress.MobilExpressServiceReference.FastCheckoutServiceSoap)(this)).GetPOSInfoListAsync(inValue);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCUpdateCreditCardResult PaymentPlanCardUpdate(string MerchantKey, string APIpassword, string Email, string CustomerID, string oldCardToken, string newCardNumber, string newCardHolderName, int newCardMonth, int newCardYear, string ClientIP) {
            return base.Channel.PaymentPlanCardUpdate(MerchantKey, APIpassword, Email, CustomerID, oldCardToken, newCardNumber, newCardHolderName, newCardMonth, newCardYear, ClientIP);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCUpdateCreditCardResult> PaymentPlanCardUpdateAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string oldCardToken, string newCardNumber, string newCardHolderName, int newCardMonth, int newCardYear, string ClientIP) {
            return base.Channel.PaymentPlanCardUpdateAsync(MerchantKey, APIpassword, Email, CustomerID, oldCardToken, newCardNumber, newCardHolderName, newCardMonth, newCardYear, ClientIP);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetCreditCardListResult GetCreditCardList(string MerchantKey, string APIpassword, string Email, string CustomerID, string ClientIP, string ClientUserAgent) {
            return base.Channel.GetCreditCardList(MerchantKey, APIpassword, Email, CustomerID, ClientIP, ClientUserAgent);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetCreditCardListResult> GetCreditCardListAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string ClientIP, string ClientUserAgent) {
            return base.Channel.GetCreditCardListAsync(MerchantKey, APIpassword, Email, CustomerID, ClientIP, ClientUserAgent);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetBankOfBINResult GetBankOfBINNumber(string MerchantKey, string APIpassword, string BIN, string ClientIP) {
            return base.Channel.GetBankOfBINNumber(MerchantKey, APIpassword, BIN, ClientIP);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetBankOfBINResult> GetBankOfBINNumberAsync(string MerchantKey, string APIpassword, string BIN, string ClientIP) {
            return base.Channel.GetBankOfBINNumberAsync(MerchantKey, APIpassword, BIN, ClientIP);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCSendOTPForCardListResult SendOTPForCardList(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string ClientIP, string ClientUserAgent) {
            return base.Channel.SendOTPForCardList(MerchantKey, APIpassword, Phone, Email, CustomerID, ClientIP, ClientUserAgent);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSendOTPForCardListResult> SendOTPForCardListAsync(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string ClientIP, string ClientUserAgent) {
            return base.Channel.SendOTPForCardListAsync(MerchantKey, APIpassword, Phone, Email, CustomerID, ClientIP, ClientUserAgent);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetCreditCardListResult VerifyAndGetCardList(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string VerificationOTP, string ClientIP, string ClientUserAgent) {
            return base.Channel.VerifyAndGetCardList(MerchantKey, APIpassword, Phone, Email, CustomerID, VerificationOTP, ClientIP, ClientUserAgent);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetCreditCardListResult> VerifyAndGetCardListAsync(string MerchantKey, string APIpassword, string Phone, string Email, string CustomerID, string VerificationOTP, string ClientIP, string ClientUserAgent) {
            return base.Channel.VerifyAndGetCardListAsync(MerchantKey, APIpassword, Phone, Email, CustomerID, VerificationOTP, ClientIP, ClientUserAgent);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCDeleteCardResult DeleteCreditCard(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken) {
            return base.Channel.DeleteCreditCard(MerchantKey, APIpassword, Email, CustomerID, CardToken);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCDeleteCardResult> DeleteCreditCardAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken) {
            return base.Channel.DeleteCreditCardAsync(MerchantKey, APIpassword, Email, CustomerID, CardToken);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCDeleteAllCardsResult DeleteAllCardsOfCustomer(string MerchantKey, string APIpassword, string Email, string CustomerID) {
            return base.Channel.DeleteAllCardsOfCustomer(MerchantKey, APIpassword, Email, CustomerID);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCDeleteAllCardsResult> DeleteAllCardsOfCustomerAsync(string MerchantKey, string APIpassword, string Email, string CustomerID) {
            return base.Channel.DeleteAllCardsOfCustomerAsync(MerchantKey, APIpassword, Email, CustomerID);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCLoyaltyPointInquiryResult LoyaltyPointInquiry(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken, int POSID, string ExtParam, string POSConfiguration) {
            return base.Channel.LoyaltyPointInquiry(MerchantKey, APIpassword, Email, CustomerID, CardToken, POSID, ExtParam, POSConfiguration);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCLoyaltyPointInquiryResult> LoyaltyPointInquiryAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken, int POSID, string ExtParam, string POSConfiguration) {
            return base.Channel.LoyaltyPointInquiryAsync(MerchantKey, APIpassword, Email, CustomerID, CardToken, POSID, ExtParam, POSConfiguration);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCLoyaltyPointInquiryWithCardResult LoyaltyPointInquiryWithCard(string MerchantKey, string APIpassword, string CardNum, int LastYear, int LastMonth, int POSID, string CardHolder, string ExtParam, string POSConfiguration) {
            return base.Channel.LoyaltyPointInquiryWithCard(MerchantKey, APIpassword, CardNum, LastYear, LastMonth, POSID, CardHolder, ExtParam, POSConfiguration);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCLoyaltyPointInquiryWithCardResult> LoyaltyPointInquiryWithCardAsync(string MerchantKey, string APIpassword, string CardNum, int LastYear, int LastMonth, int POSID, string CardHolder, string ExtParam, string POSConfiguration) {
            return base.Channel.LoyaltyPointInquiryWithCardAsync(MerchantKey, APIpassword, CardNum, LastYear, LastMonth, POSID, CardHolder, ExtParam, POSConfiguration);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentResult ProcessPayment(
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, 
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string Email, 
                    string CustomerID, 
                    string CardToken, 
                    int POSID, 
                    decimal TotalAmount, 
                    int InstallmentCount, 
                    bool UseLoyaltyPoints, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool Request3D, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtCampaignInfo, 
                    string POSConfiguration) {
            return base.Channel.ProcessPayment(ProcessType, MerchantKey, APIpassword, TransactionId, Email, CustomerID, CardToken, POSID, TotalAmount, InstallmentCount, UseLoyaltyPoints, RequestOTP, RequestCVV, Request3D, ReturnURL, ClientIP, ClientUserAgent, ExtCampaignInfo, POSConfiguration);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentResult> ProcessPaymentAsync(
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, 
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string Email, 
                    string CustomerID, 
                    string CardToken, 
                    int POSID, 
                    decimal TotalAmount, 
                    int InstallmentCount, 
                    bool UseLoyaltyPoints, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool Request3D, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtCampaignInfo, 
                    string POSConfiguration) {
            return base.Channel.ProcessPaymentAsync(ProcessType, MerchantKey, APIpassword, TransactionId, Email, CustomerID, CardToken, POSID, TotalAmount, InstallmentCount, UseLoyaltyPoints, RequestOTP, RequestCVV, Request3D, ReturnURL, ClientIP, ClientUserAgent, ExtCampaignInfo, POSConfiguration);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentWithCardResult ProcessPaymentWithCard(
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, 
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string CardNum, 
                    int LastYear, 
                    int LastMonth, 
                    string CVV, 
                    int POSID, 
                    decimal TotalAmount, 
                    int InstallmentCount, 
                    bool UseLoyaltyPoints, 
                    bool Request3D, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtCampaignInfo, 
                    string CustomerID, 
                    string Email, 
                    string CustomerName, 
                    string CustomerPhone, 
                    string CardHolder, 
                    string POSConfiguration) {
            return base.Channel.ProcessPaymentWithCard(ProcessType, MerchantKey, APIpassword, TransactionId, CardNum, LastYear, LastMonth, CVV, POSID, TotalAmount, InstallmentCount, UseLoyaltyPoints, Request3D, ReturnURL, ClientIP, ClientUserAgent, ExtCampaignInfo, CustomerID, Email, CustomerName, CustomerPhone, CardHolder, POSConfiguration);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentWithCardResult> ProcessPaymentWithCardAsync(
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, 
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string CardNum, 
                    int LastYear, 
                    int LastMonth, 
                    string CVV, 
                    int POSID, 
                    decimal TotalAmount, 
                    int InstallmentCount, 
                    bool UseLoyaltyPoints, 
                    bool Request3D, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtCampaignInfo, 
                    string CustomerID, 
                    string Email, 
                    string CustomerName, 
                    string CustomerPhone, 
                    string CardHolder, 
                    string POSConfiguration) {
            return base.Channel.ProcessPaymentWithCardAsync(ProcessType, MerchantKey, APIpassword, TransactionId, CardNum, LastYear, LastMonth, CVV, POSID, TotalAmount, InstallmentCount, UseLoyaltyPoints, Request3D, ReturnURL, ClientIP, ClientUserAgent, ExtCampaignInfo, CustomerID, Email, CustomerName, CustomerPhone, CardHolder, POSConfiguration);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentInquiryResult PaymentInquiry(RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, string MerchantKey, string APIpassword, string TransactionId, int POSID, decimal TotalAmount, int InstallmentCount) {
            return base.Channel.PaymentInquiry(ProcessType, MerchantKey, APIpassword, TransactionId, POSID, TotalAmount, InstallmentCount);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentInquiryResult> PaymentInquiryAsync(RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessType ProcessType, string MerchantKey, string APIpassword, string TransactionId, int POSID, decimal TotalAmount, int InstallmentCount) {
            return base.Channel.PaymentInquiryAsync(ProcessType, MerchantKey, APIpassword, TransactionId, POSID, TotalAmount, InstallmentCount);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentResult FinishPaymentProcess(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, string OTP, string CVV, int POSID, string ClientIP, string ClientUserAgent) {
            return base.Channel.FinishPaymentProcess(MerchantKey, APIpassword, TransactionId, MobilexpressTransId, OTP, CVV, POSID, ClientIP, ClientUserAgent);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentResult> FinishPaymentProcessAsync(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, string OTP, string CVV, int POSID, string ClientIP, string ClientUserAgent) {
            return base.Channel.FinishPaymentProcessAsync(MerchantKey, APIpassword, TransactionId, MobilexpressTransId, OTP, CVV, POSID, ClientIP, ClientUserAgent);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentWithCardResult FinishPaymentProcessWithCard(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, string CardNum, int LastYear, int LastMonth, string CVV, string ClientIP, string ClientUserAgent) {
            return base.Channel.FinishPaymentProcessWithCard(MerchantKey, APIpassword, TransactionId, MobilexpressTransId, CardNum, LastYear, LastMonth, CVV, ClientIP, ClientUserAgent);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCProcessPaymentWithCardResult> FinishPaymentProcessWithCardAsync(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, string CardNum, int LastYear, int LastMonth, string CVV, string ClientIP, string ClientUserAgent) {
            return base.Channel.FinishPaymentProcessWithCardAsync(MerchantKey, APIpassword, TransactionId, MobilexpressTransId, CardNum, LastYear, LastMonth, CVV, ClientIP, ClientUserAgent);
        }
        
        public bool ValidateNotification(string TransactionId, string MobilexpressTransId, string Result, int InstallmentCount, decimal TotalAmount, string Hash) {
            return base.Channel.ValidateNotification(TransactionId, MobilexpressTransId, Result, InstallmentCount, TotalAmount, Hash);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateNotificationAsync(string TransactionId, string MobilexpressTransId, string Result, int InstallmentCount, decimal TotalAmount, string Hash) {
            return base.Channel.ValidateNotificationAsync(TransactionId, MobilexpressTransId, Result, InstallmentCount, TotalAmount, Hash);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCStartHostedPaymentProcessResult StartHostedPaymentProcess(
                    string MerchantKey, 
                    string APIpassword, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.PGProcessType ProcessType, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.PGViewType ViewType, 
                    int DesignType, 
                    string Email, 
                    string CustomerID, 
                    string Phone, 
                    bool UseOneClickPayment, 
                    bool CustomerIsLoggedIn, 
                    bool UseIVRForCardEntry, 
                    string TransactionId, 
                    decimal TotalAmount, 
                    string BasketContent, 
                    bool UseLoyaltyPoints, 
                    bool Use3DSecure, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool UseInstallment, 
                    bool UseCustomInstallments, 
                    string InstallmentRateTable, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtraParam, 
                    string CustomerName, 
                    string POSConfiguration) {
            return base.Channel.StartHostedPaymentProcess(MerchantKey, APIpassword, ProcessType, ViewType, DesignType, Email, CustomerID, Phone, UseOneClickPayment, CustomerIsLoggedIn, UseIVRForCardEntry, TransactionId, TotalAmount, BasketContent, UseLoyaltyPoints, Use3DSecure, RequestOTP, RequestCVV, UseInstallment, UseCustomInstallments, InstallmentRateTable, ReturnURL, ClientIP, ClientUserAgent, ExtraParam, CustomerName, POSConfiguration);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCStartHostedPaymentProcessResult> StartHostedPaymentProcessAsync(
                    string MerchantKey, 
                    string APIpassword, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.PGProcessType ProcessType, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.PGViewType ViewType, 
                    int DesignType, 
                    string Email, 
                    string CustomerID, 
                    string Phone, 
                    bool UseOneClickPayment, 
                    bool CustomerIsLoggedIn, 
                    bool UseIVRForCardEntry, 
                    string TransactionId, 
                    decimal TotalAmount, 
                    string BasketContent, 
                    bool UseLoyaltyPoints, 
                    bool Use3DSecure, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool UseInstallment, 
                    bool UseCustomInstallments, 
                    string InstallmentRateTable, 
                    string ReturnURL, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtraParam, 
                    string CustomerName, 
                    string POSConfiguration) {
            return base.Channel.StartHostedPaymentProcessAsync(MerchantKey, APIpassword, ProcessType, ViewType, DesignType, Email, CustomerID, Phone, UseOneClickPayment, CustomerIsLoggedIn, UseIVRForCardEntry, TransactionId, TotalAmount, BasketContent, UseLoyaltyPoints, Use3DSecure, RequestOTP, RequestCVV, UseInstallment, UseCustomInstallments, InstallmentRateTable, ReturnURL, ClientIP, ClientUserAgent, ExtraParam, CustomerName, POSConfiguration);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCUpdateHostedPaymentProcessResult UpdateHostedPaymentProcess(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, decimal TotalAmount, bool Use3DSecure, bool RequestOTP, bool RequestCVV, string BasketContent) {
            return base.Channel.UpdateHostedPaymentProcess(MerchantKey, APIpassword, TransactionId, MobilexpressTransId, TotalAmount, Use3DSecure, RequestOTP, RequestCVV, BasketContent);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCUpdateHostedPaymentProcessResult> UpdateHostedPaymentProcessAsync(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId, decimal TotalAmount, bool Use3DSecure, bool RequestOTP, bool RequestCVV, string BasketContent) {
            return base.Channel.UpdateHostedPaymentProcessAsync(MerchantKey, APIpassword, TransactionId, MobilexpressTransId, TotalAmount, Use3DSecure, RequestOTP, RequestCVV, BasketContent);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCStartHostedAccountManagementResult StartHostedAccountManagement(string MerchantKey, string APIpassword, RezaB.API.MobilExpress.MobilExpressServiceReference.PGViewType ViewType, int DesignType, string Email, string CustomerID, string Phone, bool CustomerIsLoggedIn, bool UseIVRForCardEntry, string ClientIP, string ClientUserAgent, string ExtraParam, string CustomerName, string POSConfiguration) {
            return base.Channel.StartHostedAccountManagement(MerchantKey, APIpassword, ViewType, DesignType, Email, CustomerID, Phone, CustomerIsLoggedIn, UseIVRForCardEntry, ClientIP, ClientUserAgent, ExtraParam, CustomerName, POSConfiguration);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCStartHostedAccountManagementResult> StartHostedAccountManagementAsync(string MerchantKey, string APIpassword, RezaB.API.MobilExpress.MobilExpressServiceReference.PGViewType ViewType, int DesignType, string Email, string CustomerID, string Phone, bool CustomerIsLoggedIn, bool UseIVRForCardEntry, string ClientIP, string ClientUserAgent, string ExtraParam, string CustomerName, string POSConfiguration) {
            return base.Channel.StartHostedAccountManagementAsync(MerchantKey, APIpassword, ViewType, DesignType, Email, CustomerID, Phone, CustomerIsLoggedIn, UseIVRForCardEntry, ClientIP, ClientUserAgent, ExtraParam, CustomerName, POSConfiguration);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetHostedPaymentProcessStatusResult GetHostedPaymentProcessStatus(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId) {
            return base.Channel.GetHostedPaymentProcessStatus(MerchantKey, APIpassword, TransactionId, MobilexpressTransId);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetHostedPaymentProcessStatusResult> GetHostedPaymentProcessStatusAsync(string MerchantKey, string APIpassword, string TransactionId, string MobilexpressTransId) {
            return base.Channel.GetHostedPaymentProcessStatusAsync(MerchantKey, APIpassword, TransactionId, MobilexpressTransId);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCSavePaymentPlanResult SavePaymentPlan(string MerchantKey, string APIpassword, string Email, string CustomerID, string PaymentPlanId, string CardToken, RezaB.API.MobilExpress.MobilExpressServiceReference.FCRecurringType RecurringType, RezaB.API.MobilExpress.MobilExpressServiceReference.FCCurrency Currency, RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentPlanLine[] Lines, int TryDays, int POSID, string GroupCode, bool AutoPayment) {
            return base.Channel.SavePaymentPlan(MerchantKey, APIpassword, Email, CustomerID, PaymentPlanId, CardToken, RecurringType, Currency, Lines, TryDays, POSID, GroupCode, AutoPayment);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSavePaymentPlanResult> SavePaymentPlanAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string PaymentPlanId, string CardToken, RezaB.API.MobilExpress.MobilExpressServiceReference.FCRecurringType RecurringType, RezaB.API.MobilExpress.MobilExpressServiceReference.FCCurrency Currency, RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentPlanLine[] Lines, int TryDays, int POSID, string GroupCode, bool AutoPayment) {
            return base.Channel.SavePaymentPlanAsync(MerchantKey, APIpassword, Email, CustomerID, PaymentPlanId, CardToken, RecurringType, Currency, Lines, TryDays, POSID, GroupCode, AutoPayment);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentPlanList GetPaymentPlanList(string MerchantKey, string APIpassword, string Email, string CustomerID, string PaymentPlanId, bool OnlyNotProcessed, bool OnlyProcessed, int StartYear, int StartMonth, int EndYear, int EndMonth, int Page, string SortField, bool SortDesc) {
            return base.Channel.GetPaymentPlanList(MerchantKey, APIpassword, Email, CustomerID, PaymentPlanId, OnlyNotProcessed, OnlyProcessed, StartYear, StartMonth, EndYear, EndMonth, Page, SortField, SortDesc);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentPlanList> GetPaymentPlanListAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string PaymentPlanId, bool OnlyNotProcessed, bool OnlyProcessed, int StartYear, int StartMonth, int EndYear, int EndMonth, int Page, string SortField, bool SortDesc) {
            return base.Channel.GetPaymentPlanListAsync(MerchantKey, APIpassword, Email, CustomerID, PaymentPlanId, OnlyNotProcessed, OnlyProcessed, StartYear, StartMonth, EndYear, EndMonth, Page, SortField, SortDesc);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveBlackListItemResult SaveBlackListItem(string MerchantKey, string APIpassword, string CreditCardNumber, string Email, string Phone, string TCKN, string ClientIP, int ReasonCode) {
            return base.Channel.SaveBlackListItem(MerchantKey, APIpassword, CreditCardNumber, Email, Phone, TCKN, ClientIP, ReasonCode);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCSaveBlackListItemResult> SaveBlackListItemAsync(string MerchantKey, string APIpassword, string CreditCardNumber, string Email, string Phone, string TCKN, string ClientIP, int ReasonCode) {
            return base.Channel.SaveBlackListItemAsync(MerchantKey, APIpassword, CreditCardNumber, Email, Phone, TCKN, ClientIP, ReasonCode);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreatePaymentLinkResult CreatePaymentLink(
                    string MerchantKey, 
                    string APIpassword, 
                    string Email, 
                    string CustomerID, 
                    bool UseOneClickPayment, 
                    string TransactionId, 
                    decimal TotalAmount, 
                    string Description, 
                    bool Use3DSecure, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool UseInstallment, 
                    bool UseCustomInstallments, 
                    string InstallmentRateTable, 
                    string ExtraParam, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentLinkSendType SendVia, 
                    string Phone, 
                    string CustomerName, 
                    string POSConfiguration, 
                    int LinkExpireHours) {
            return base.Channel.CreatePaymentLink(MerchantKey, APIpassword, Email, CustomerID, UseOneClickPayment, TransactionId, TotalAmount, Description, Use3DSecure, RequestOTP, RequestCVV, UseInstallment, UseCustomInstallments, InstallmentRateTable, ExtraParam, SendVia, Phone, CustomerName, POSConfiguration, LinkExpireHours);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreatePaymentLinkResult> CreatePaymentLinkAsync(
                    string MerchantKey, 
                    string APIpassword, 
                    string Email, 
                    string CustomerID, 
                    bool UseOneClickPayment, 
                    string TransactionId, 
                    decimal TotalAmount, 
                    string Description, 
                    bool Use3DSecure, 
                    bool RequestOTP, 
                    bool RequestCVV, 
                    bool UseInstallment, 
                    bool UseCustomInstallments, 
                    string InstallmentRateTable, 
                    string ExtraParam, 
                    RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentLinkSendType SendVia, 
                    string Phone, 
                    string CustomerName, 
                    string POSConfiguration, 
                    int LinkExpireHours) {
            return base.Channel.CreatePaymentLinkAsync(MerchantKey, APIpassword, Email, CustomerID, UseOneClickPayment, TransactionId, TotalAmount, Description, Use3DSecure, RequestOTP, RequestCVV, UseInstallment, UseCustomInstallments, InstallmentRateTable, ExtraParam, SendVia, Phone, CustomerName, POSConfiguration, LinkExpireHours);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreatePaymentLinkResult CreatePaymentLinkForPaymentPlan(string MerchantKey, string APIpassword, bool UseOneClickPayment, string TransactionId, int PaymentPlanLineId, bool Use3DSecure, bool RequestOTP, bool RequestCVV, bool UseInstallment, bool UseCustomInstallments, string InstallmentRateTable, RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentLinkSendType SendVia, string POSConfiguration, int LinkExpireHours) {
            return base.Channel.CreatePaymentLinkForPaymentPlan(MerchantKey, APIpassword, UseOneClickPayment, TransactionId, PaymentPlanLineId, Use3DSecure, RequestOTP, RequestCVV, UseInstallment, UseCustomInstallments, InstallmentRateTable, SendVia, POSConfiguration, LinkExpireHours);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreatePaymentLinkResult> CreatePaymentLinkForPaymentPlanAsync(string MerchantKey, string APIpassword, bool UseOneClickPayment, string TransactionId, int PaymentPlanLineId, bool Use3DSecure, bool RequestOTP, bool RequestCVV, bool UseInstallment, bool UseCustomInstallments, string InstallmentRateTable, RezaB.API.MobilExpress.MobilExpressServiceReference.FCPaymentLinkSendType SendVia, string POSConfiguration, int LinkExpireHours) {
            return base.Channel.CreatePaymentLinkForPaymentPlanAsync(MerchantKey, APIpassword, UseOneClickPayment, TransactionId, PaymentPlanLineId, Use3DSecure, RequestOTP, RequestCVV, UseInstallment, UseCustomInstallments, InstallmentRateTable, SendVia, POSConfiguration, LinkExpireHours);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreateCardSaveLinkResult CreateCardSaveLink(string MerchantKey, string APIpassword, string Email, string CustomerID, RezaB.API.MobilExpress.MobilExpressServiceReference.FCCardSaveLinkSendType SendVia, string Phone, string CustomerName, string POSConfiguration, int LinkExpireHours, string ExtraParam) {
            return base.Channel.CreateCardSaveLink(MerchantKey, APIpassword, Email, CustomerID, SendVia, Phone, CustomerName, POSConfiguration, LinkExpireHours, ExtraParam);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCCreateCardSaveLinkResult> CreateCardSaveLinkAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, RezaB.API.MobilExpress.MobilExpressServiceReference.FCCardSaveLinkSendType SendVia, string Phone, string CustomerName, string POSConfiguration, int LinkExpireHours, string ExtraParam) {
            return base.Channel.CreateCardSaveLinkAsync(MerchantKey, APIpassword, Email, CustomerID, SendVia, Phone, CustomerName, POSConfiguration, LinkExpireHours, ExtraParam);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetTransactionListResult GetTransactionList(string MerchantKey, string APIpassword, string Email, string CustomerID, string TransactionId, int POSID, string CardToken, RezaB.API.MobilExpress.MobilExpressServiceReference.FCTransType TransType, bool OnlySuccess, bool OnlyNotSuccess, string StartDate, string EndDate, int Page, string SortField, bool SortDesc) {
            return base.Channel.GetTransactionList(MerchantKey, APIpassword, Email, CustomerID, TransactionId, POSID, CardToken, TransType, OnlySuccess, OnlyNotSuccess, StartDate, EndDate, Page, SortField, SortDesc);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCGetTransactionListResult> GetTransactionListAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string TransactionId, int POSID, string CardToken, RezaB.API.MobilExpress.MobilExpressServiceReference.FCTransType TransType, bool OnlySuccess, bool OnlyNotSuccess, string StartDate, string EndDate, int Page, string SortField, bool SortDesc) {
            return base.Channel.GetTransactionListAsync(MerchantKey, APIpassword, Email, CustomerID, TransactionId, POSID, CardToken, TransType, OnlySuccess, OnlyNotSuccess, StartDate, EndDate, Page, SortField, SortDesc);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCTokenInquiryResult TokenInquiry(string MerchantKey, string APIpassword, string CardNumber) {
            return base.Channel.TokenInquiry(MerchantKey, APIpassword, CardNumber);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCTokenInquiryResult> TokenInquiryAsync(string MerchantKey, string APIpassword, string CardNumber) {
            return base.Channel.TokenInquiryAsync(MerchantKey, APIpassword, CardNumber);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCCardInfoInquiryResult CardInfoInquiry(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken) {
            return base.Channel.CardInfoInquiry(MerchantKey, APIpassword, Email, CustomerID, CardToken);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCCardInfoInquiryResult> CardInfoInquiryAsync(string MerchantKey, string APIpassword, string Email, string CustomerID, string CardToken) {
            return base.Channel.CardInfoInquiryAsync(MerchantKey, APIpassword, Email, CustomerID, CardToken);
        }
        
        public RezaB.API.MobilExpress.MobilExpressServiceReference.FCWireTransferRequestResult WireTransferRequest(
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string Email, 
                    string CustomerID, 
                    int BankAccountID, 
                    decimal TotalAmount, 
                    string CustomerName, 
                    string CustomerPhone, 
                    string CustomerTCKN, 
                    string CustomerVal1, 
                    string CustomerVal2, 
                    string CustomerVal3, 
                    string AddressCode, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtParam, 
                    string NotificationURL) {
            return base.Channel.WireTransferRequest(MerchantKey, APIpassword, TransactionId, Email, CustomerID, BankAccountID, TotalAmount, CustomerName, CustomerPhone, CustomerTCKN, CustomerVal1, CustomerVal2, CustomerVal3, AddressCode, ClientIP, ClientUserAgent, ExtParam, NotificationURL);
        }
        
        public System.Threading.Tasks.Task<RezaB.API.MobilExpress.MobilExpressServiceReference.FCWireTransferRequestResult> WireTransferRequestAsync(
                    string MerchantKey, 
                    string APIpassword, 
                    string TransactionId, 
                    string Email, 
                    string CustomerID, 
                    int BankAccountID, 
                    decimal TotalAmount, 
                    string CustomerName, 
                    string CustomerPhone, 
                    string CustomerTCKN, 
                    string CustomerVal1, 
                    string CustomerVal2, 
                    string CustomerVal3, 
                    string AddressCode, 
                    string ClientIP, 
                    string ClientUserAgent, 
                    string ExtParam, 
                    string NotificationURL) {
            return base.Channel.WireTransferRequestAsync(MerchantKey, APIpassword, TransactionId, Email, CustomerID, BankAccountID, TotalAmount, CustomerName, CustomerPhone, CustomerTCKN, CustomerVal1, CustomerVal2, CustomerVal3, AddressCode, ClientIP, ClientUserAgent, ExtParam, NotificationURL);
        }
    }
}
